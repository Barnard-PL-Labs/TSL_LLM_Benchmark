always assume {
  (neighbors < 2) -> !(neighbors = 2);
  (neighbors < 2) -> !(neighbors = 3);
  (neighbors > 3) -> !(neighbors < 2);
  (neighbors < 2) -> !(neighbors > 3);
  (neighbors > 3) -> !(neighbors = 2);
  (neighbors > 3) -> !(neighbors = 3);
 (neighbors = 3) -> !(neighbors = 2);
 (neighbors = 2) -> !(neighbors = 3);
}

always guarantee {
  // Any live cell with fewer than two live neighbors dies, as if by underpopulation
(alive && neighbors < 2 && false) -> X (alive <-> p(x));

  // Any live cell with two or three live neighbors lives on to the next generation
  (alive && (neighbors = 2 || neighbors = 3)) -> [alive <- true];

  // Any live cell with more than three live neighbors dies, as if by overpopulation
  (alive && neighbors > 3) -> [alive <- false];

  // Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction
  (!alive && neighbors = 3) -> [alive <- true];
}
