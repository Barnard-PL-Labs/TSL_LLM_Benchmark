always assume {
    // Define initial state and mutual exclusiveness of directions
    (ball == 0 -> leftmost(ball));
    (ball == 10 -> rightmost(ball));
}

always guarantee {
    // Move the ball to the left when it's at the rightmost wall and vice versa
    rightmost(ball) -> [ball <- moveLeft(ball)] W !rightmost(ball);
    leftmost(ball) -> [ball <- moveRight(ball)] W !leftmost(ball);

    // If not at any wall, continue in the current direction
    !rightmost(ball) && !leftmost(ball) -> 
        (X (ball == prevBall + 1)) ||
        (X (ball == prevBall - 1));
}
