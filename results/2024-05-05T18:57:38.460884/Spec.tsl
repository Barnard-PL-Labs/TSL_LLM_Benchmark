always assume {
  // Button presses act as inputs
}

always guarantee {
  // When button1 is pushed, E4 is immediately the next thing written to noteToPlay
  button1 -> X ([noteToPlay <- "E4"]);

  // When button2 is pushed, G4 is immediately the next thing written to noteToPlay
  button2 -> X ([noteToPlay <- "G4"]);

  // When button3 is pushed, A4 is eventually written to noteToPlay2
  button3 -> F ([noteToPlay2 <- "A4"]);

  // If A4 is playing on noteToPlay2, E4 cannot be played on noteToPlay at the same time
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> F !([noteToPlay2 <- "A4"]);

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"]);

  // Finally, if E4 is played on noteToPlay, G4 must follow on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay <- "G4"]);
}
