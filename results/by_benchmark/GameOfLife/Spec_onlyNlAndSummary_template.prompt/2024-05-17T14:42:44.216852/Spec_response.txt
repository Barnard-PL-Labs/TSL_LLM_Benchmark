Here's how you can translate the given natural language description for a single cell in the game of life into a TSL specification:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive && comeDead);
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive -> [cellState <- changeState(alive)];

  // If comeDead is true, the cell uses changeState() to die
  comeDead -> [cellState <- changeState(dead)];
}
```

This TSL code ensures that the actions associated with the cell's state changes are mutually exclusive and react appropriately to the environmental triggers `comeAlive` and `comeDead`.