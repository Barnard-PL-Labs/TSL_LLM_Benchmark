Below is the TSL specification for a state machine simulating a single cell in the game of life, based on the provided rules and functions:

```tsl
always assume {
  //comeAlive and comeDead cannot both be true at the same time
  !(comeAlive && comeDead);
}

always guarantee {
  // If comeAlive is true the cell uses changeState() to come alive
  comeAlive -> [cellState <- changeState(alive)];

  // If comeDead is true the cell uses changeState() to die
  comeDead -> [cellState <- changeState(dead)];
}
```

This TSL code ensures that the cell cannot simultaneously come alive and die, and it describes how the cell should respond when either event occurs.