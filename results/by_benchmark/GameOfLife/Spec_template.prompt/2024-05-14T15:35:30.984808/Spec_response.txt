Here's a TSL specification for simulating a single cell in the game of life based on the rules and functions provided:

```
always assume {
  !(comeAlive(index) && comeDead(index)); // comeAlive and comeDead cannot both be true at the same time
}

always guarantee {
  comeAlive(index) -> [changeState <- alive]; // If comeAlive is true, the cell uses changeState() to come alive
  comeDead(index) -> [changeState <- !alive]; // If comeDead is true, the cell uses changeState() to die
}
```