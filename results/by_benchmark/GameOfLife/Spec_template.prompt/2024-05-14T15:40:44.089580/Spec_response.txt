Here's the TSL specification that simulates a single cell in the game of life based on the defined functions and predicates:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true the cell uses changeState() to come alive
  comeAlive(index) -> [alive <- changeState()];
  
  // If comeDead is true the cell uses changeState() to die
  comeDead(index) -> [alive <- changeState()];
}
```