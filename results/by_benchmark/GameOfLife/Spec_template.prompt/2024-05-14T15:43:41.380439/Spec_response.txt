Here's the TSL specification based on the given natural language description for simulating a single cell in the game of life with the usual rules:

```
always assume {
  // comeAlive and comeDead are mutually exclusive
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [changeState(alive)];
  
  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [changeState(!alive)];
}
```

This TSL code captures the behavior of a cell in the game of life according to the standard rules and ensures that the cell's life state is updated based on its surrounding neighbors.