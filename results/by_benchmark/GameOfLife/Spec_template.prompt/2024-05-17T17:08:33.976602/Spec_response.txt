Here is the TSL specification based on the natural language description for simulating a single cell in the game of life using the provided functions and predicates:

```tsl
always assume {
  // comeAlive and comeDead are exclusive, meaning they cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, then use changeState() to make the cell alive
  comeAlive(index) -> [changeState()];

  // If comeDead is true, then use changeState() to make the cell dead
  comeDead(index) -> [changeState()];
}
```

This specification ensures that the cell in the game of life either becomes alive or dies based on the conditions specified by `comeAlive(index)` and `comeDead(index)`, and applies the `changeState()` function accordingly.