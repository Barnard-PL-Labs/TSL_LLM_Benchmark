Here is the TSL specification based on your description for simulating a single cell in the game of life using the provided functions and predicates:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [alive <- true];

  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [alive <- false];
}
```

This specification defines the behavior of a single cell based on the comeAlive and comeDead predicates. The cell's state is directly manipulated based on the predicates' outcomes to either become alive or die.