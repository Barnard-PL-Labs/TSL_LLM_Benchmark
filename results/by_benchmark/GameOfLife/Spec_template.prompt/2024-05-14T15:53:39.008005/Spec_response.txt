Here is the TSL specification based on your description of simulating a single cell in the game of life:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [changeState()];

  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [changeState()];
}
```

This TSL specification ensures that the cell changes its state appropriately based on whether it should come alive or die, according to the game of life rules, while maintaining the mutual exclusion between the `comeAlive` and `comeDead` conditions.