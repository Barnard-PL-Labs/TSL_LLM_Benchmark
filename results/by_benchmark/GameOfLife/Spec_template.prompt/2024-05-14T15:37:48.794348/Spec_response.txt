Here is the TSL specification for the described scenario simulating a single cell in the game of life:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [changeState()];
  
  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [changeState()];
}
```

This specification ensures that the actions to change the state of the cell are triggered based on the predicates `comeAlive` and `comeDead`, adhering to the rules of the game of life.