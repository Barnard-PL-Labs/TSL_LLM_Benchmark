Below is the TSL specification based on your description to simulate a single cell in the game of life with the rules provided:

```tsl
always assume {
  !(comeAlive(index) && comeDead(index)); // comeAlive and comeDead cannot both be true at the same time
}

always guarantee {
  comeAlive(index) -> [changeState()];
  comeDead(index) -> [changeState()];
}
```

This specification ensures that the cell will change its state according to the 'comeAlive' and 'comeDead' functions. If 'comeAlive' is true for a given cell index, the cell will invoke the 'changeState()' function to become alive. Similarly, if 'comeDead' is true, it will also invoke 'changeState()' to die. The assumption enforces that both conditions ('comeAlive' and 'comeDead') cannot be true simultaneously, adhering to the game's logic rules where these states are mutually exclusive for any cell at a given time.