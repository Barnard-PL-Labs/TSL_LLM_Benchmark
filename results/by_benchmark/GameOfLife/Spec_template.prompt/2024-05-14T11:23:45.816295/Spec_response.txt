Here's how you would write a TSL specification for a single cell in the game of life based on the rules and functions provided in your description:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [changeState()];

  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [changeState()];
}
```

This specification ensures that the state of the cell is updated properly depending on whether the conditions for coming alive or dying are met, while maintaining that `comeAlive` and `comeDead` cannot be true simultaneously.