Here is the translated TSL specification for simulating a single cell in the game of life based on the given assumptions and guarantees:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [alive <- true];

  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [alive <- false];
}
```

This specification ensures that the cell changes its state according to the rules of the game of life, by either coming alive or dying, based on the predicates `comeAlive` and `comeDead`.