Here is the TSL specification based on the given natural language description for simulating a single cell in the game of life, using the provided functions and predicates:

```tsl
always assume {
    // comeAlive and comeDead cannot both be true at the same time
    !(comeAlive(index) && comeDead(index));
}

always guarantee {
    // If comeAlive is true the cell uses changeState() to come alive
    comeAlive(index) -> ([alive <- true]);

    // If comeDead is true the cell uses changeState() to die
    comeDead(index) -> ([alive <- false]);
}
```

This TSL specification ensures that the cell will come alive or die according to the rules defined by the `comeAlive` and `comeDead` predicates, and that these two conditions cannot occur simultaneously.