Here is the TSL specification based on the provided description for simulating a single cell in the game of life:

```tsl
always assume {
  // comeAlive and comeDead cannot both be true at the same time
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  // If comeAlive is true, the cell uses changeState() to come alive
  comeAlive(index) -> [alive <- changeState()];

  // If comeDead is true, the cell uses changeState() to die
  comeDead(index) -> [alive <- changeState()];
}
```

This specification ensures that the cell will change its state according to the rules defined by the `comeAlive` and `comeDead` functions, and it respects the mutual exclusion of these two functions.