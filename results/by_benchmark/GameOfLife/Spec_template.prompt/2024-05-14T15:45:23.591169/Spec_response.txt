Here is the TSL specification based on the provided natural language description for simulating a single cell in the game of life:

```tsl
always assume {
  !(comeAlive(index) && comeDead(index));
}

always guarantee {
  comeAlive(index) -> [changeState()];  // Change state to alive
  comeDead(index) -> [changeState()];   // Change state to dead
}
```

This specification assumes that the predicates `comeAlive` and `comeDead` are mutually exclusive, as stated in the natural language description. It provides guarantees that the state of the cell will change according to the predicatesâ€”if `comeAlive` is true, the cell will use `changeState()` to come alive, and similarly, if `comeDead` is true, the cell will use `changeState()` to die.