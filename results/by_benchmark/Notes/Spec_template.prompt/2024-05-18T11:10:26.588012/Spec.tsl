always assume {
  // Assume the user can push three distinct buttons, button1, button2, and button3
}

always guarantee {
  // When button1 is pressed, E4 will be the next sound on noteToPlay
  button1 -> X ([noteToPlay <- "E4"]);
  
  // When button2 is pressed, G4 will be the next sound on noteToPlay
  button2 -> X ([noteToPlay <- "G4"]);
  
  // When button3 is pressed, A4 will be the next sound on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);
  
  // Mutual exclusion for playing E4 on noteToPlay and A4 on noteToPlay2 at the same time
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> F (![noteToPlay <- "E4"] && X ([noteToPlay2 <- "A4"]));
  
  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  [noteToPlay <- "E4"] -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
