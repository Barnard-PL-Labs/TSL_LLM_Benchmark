always assume {
  // Define the possible interaction with the buttons
  (button1 || button2 || button3);
}

always guarantee {
  // Ensure when button1 is pushed, E4 is played next on noteToPlay
  button1 -> X ([noteToPlay <- "E4"]);

  // Ensure when button2 is pushed, G4 is played next on noteToPlay
  button2 -> X ([noteToPlay <- "G4"]);

  // Ensure when button3 is pushed, A4 is played next on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Prevent E4 on noteToPlay and A4 on noteToPlay2 from playing at the same time
  [noteToPlay <- "E4"] -> !([noteToPlay2 <- "A4"]);
  
  // A4 on noteToPlay2 must not be played until E4 stops on noteToPlay
  ([noteToPlay <- "E4"]) -> F (!([noteToPlay <- "E4"]) && G([noteToPlay2 <- "A4"]));

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  [noteToPlay <- "E4"] -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
