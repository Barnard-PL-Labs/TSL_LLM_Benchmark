always assume {
  // Define the exclusive relationship between button presses
  !(button1 && button2);
  !(button1 && button3);
  !(button2 && button3);
}

always guarantee {
  // Specify the actions to be taken when each button is pushed
  button1 -> X ([noteToPlay <- "E4"]);
  button2 -> X ([noteToPlay <- "G4"]);
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Define the relationship between notes played on noteToPlay and noteToPlay2
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);
  ([noteToPlay <- "E4"]) -> !([noteToPlay2 <- "A4"]);

  // Ensure that A4 on noteToPlay2 cannot be played until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> F !([noteToPlay <- "E4"]) U ([noteToPlay2 <- "A4"]);

  // Sequence or chord guarantee when E4 is played
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
