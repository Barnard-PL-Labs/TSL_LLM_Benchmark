```
always assume {
  // We define three buttons that a user can press
  (button1 || button2 || button3);
}

always guarantee {
  // When button1 is pressed, write E4 to noteToPlay as the next action
  button1 -> X ([noteToPlay <- "E4"]);
  // When button2 is pressed, write G4 to noteToPlay as the next action
  button2 -> X ([noteToPlay <- "G4"]);
  // When button3 is pressed, write A4 to noteToPlay2 eventually
  button3 -> F ([noteToPlay2 <- "A4"]);

  // Ensure A4 on noteToPlay2 does not coincide with E4 on noteToPlay
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);
  // A4 on noteToPlay2 cannot be played until E4 on noteToPlay has stopped
  ([noteToPlay <- "E4"]) -> F (!([noteToPlay <- "E4"]) && X ([noteToPlay2 <- "A4"]));

  // If E4 is played on noteToPlay, then eventually A4 must be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
```