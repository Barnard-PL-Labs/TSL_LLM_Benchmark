always assume {
  // Assumption about buttons being pressed independently
  !(button1 && button2);
  !(button1 && button3);
  !(button2 && button3);
}

always guarantee {
  // Guarantee that pressing button1 plays note E4 on noteToPlay
  button1 -> ([noteToPlay <- "E4"] && X(!button1 U button2 || button3));
  
  // Guarantee that pressing button2 plays note G4 on noteToPlay
  button2 -> ([noteToPlay <- "G4"] && X(!button2 U button1 || button3));
  
  // Guarantee that pressing button3 plays note A4 on noteToPlay2
  button3 -> ([noteToPlay2 <- "A4"] && X(!button3 U button1 || button2));

  // Mutual exclusion of E4 on noteToPlay and A4 on noteToPlay2 being played simultaneously
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // A4 on noteToPlay2 cannot be played until E4 on noteToPlay has stopped being played
  ([noteToPlay2 <- "A4"]) -> (!([noteToPlay <- "E4"]) W button1);

  // Sequence or chord condition
  ([noteToPlay <- "E4"]) -> F([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
