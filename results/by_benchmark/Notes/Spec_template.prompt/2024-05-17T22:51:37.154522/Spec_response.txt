```tsl
always assume {
  // Each button can be independently pushed by the user.
  button1 || button2 || button3;
}

always guarantee {
  // When button1 is pushed, E4 is the next to be played on noteToPlay.
  button1 -> X ([noteToPlay <- "E4"]);
  
  // When button2 is pushed, G4 is the next to be played on noteToPlay.
  button2 -> X ([noteToPlay <- "G4"]);

  // When button3 is pushed, A4 is the next to be played on noteToPlay2.
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Prevent E4 from being played on noteToPlay if A4 is playing on noteToPlay2, and vice versa.
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);
  ([noteToPlay <- "E4"]) -> !([noteToPlay2 <- "A4"]);

  // A4 cannot be played on noteToPlay2 until E4 has stopped on noteToPlay.
  ([noteToPlay <- "E4"]) -> F ![noteToPlay <- "E4"] U ([noteToPlay2 <- "A4"]);

  // If E4 is played on noteToPlay, then A4 and G4 must eventually follow respectively on noteToPlay2 and noteToPlay.
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && F [noteToPlay <- "G4"]);
}
```