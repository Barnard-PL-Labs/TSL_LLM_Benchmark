```tsl
always assume {
  // There are three buttons that can be individually pushed
  button1;
  button2;
  button3;
}

always guarantee {
  // Button1 pushed leads to playing E4 on noteToPlay as the next action
  button1 -> X ([noteToPlay <- "E4"]);
  
  // Button2 pushed leads to playing G4 on noteToPlay as the next action
  button2 -> X ([noteToPlay <- "G4"]);
  
  // Button3 pushed leads to eventually playing A4 on noteToPlay2
  button3 -> F ([noteToPlay2 <- "A4"]);
  
  // Mutual exclusivity of E4 on noteToPlay and A4 on noteToPlay2
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);
  
  // A4 on noteToPlay2 cannot be played until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> G (!([noteToPlay2 <- "A4"]));
  
  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> (F ([noteToPlay2 <- "A4"]) && F ([noteToPlay <- "G4"]));
}
```