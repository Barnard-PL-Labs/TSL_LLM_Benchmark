always assume {
  // Definition of button inputs
  button1 || button2 || button3;
}

always guarantee {
  // When button1 is pushed, write E4 to noteToPlay as the next action
  button1 -> X ([noteToPlay <- "E4"]);

  // When button2 is pushed, write G4 to noteToPlay as the next action
  button2 -> X ([noteToPlay <- "G4"]);

  // When button3 is pushed, write A4 to noteToPlay2
  button3 -> ([noteToPlay2 <- "A4"]);

  // Specific relationship between noteToPlay and noteToPlay2
  // E4 on noteToPlay cannot coincide with A4 on noteToPlay2
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // A4 on noteToPlay2 cannot be played until E4 is stopped on noteToPlay
  ([noteToPlay2 <- "A4"]) -> (!([noteToPlay <- "E4"]) W [noteToPlay2 <- "A4"]);

  // Sequence condition if E4 is played on noteToPlay, A4 must eventually be played on noteToPlay2
  // and G4 on noteToPlay, allowing for a sequence or a chord
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
