always assume {
  button1 || button2 || button3;
}

always guarantee {
  // Guarantee when button1 is pressed
  button1 -> X ([noteToPlay <- "E4"]);
  
  // Guarantee when button2 is pressed
  button2 -> X ([noteToPlay <- "G4"]);
  
  // Guarantee when button3 is pressed
  button3 -> X ([noteToPlay2 <- "A4"]);
  
  // Restricts simultaneous play of E4 on noteToPlay and A4 on noteToPlay2
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> (!([noteToPlay2 <- "A4"]) W (!(noteToPlay = "E4")));
  
  // When E4 is played on noteToPlay, A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
