always assume {
  // Three buttons that can be pushed by the user
  button1 || button2 || button3;
}

always guarantee {
  // When button1 is pushed, write E4 to noteToPlay
  button1 -> X ([noteToPlay <- E4]);
  
  // When button2 is pushed, write G4 to noteToPlay
  button2 -> X ([noteToPlay <- G4]);
  
  // When button3 is pushed, write A4 to noteToPlay2
  button3 -> X ([noteToPlay2 <- A4]);
  
  // Prevent E4 and A4 from being played at the same time
  ([noteToPlay2 <- A4] -> G !(noteToPlay = E4));
  
  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- E4] -> (!([noteToPlay2 <- A4]) W !([noteToPlay <- E4])));
  
  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- E4] -> F ([noteToPlay2 <- A4] && X ([noteToPlay <- G4])));
}
