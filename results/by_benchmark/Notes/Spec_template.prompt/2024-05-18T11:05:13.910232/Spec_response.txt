```tsl
always assume {
  // Assumption of user input via three distinct buttons
  ! (button1 && button2);
  ! (button1 && button3);
  ! (button2 && button3);
}

always guarantee {
  // Guarantee that pressing button1 results in E4 being played on noteToPlay as the next action
  button1 -> X ([noteToPlay <- "E4"]);
  
  // Guarantee that pressing button2 results in G4 being played on noteToPlay as the next action
  button2 -> X ([noteToPlay <- "G4"]);
  
  // Guarantee that pressing button3 results in A4 being played on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Guarantee mutual exclusivity and sequence of note playing between noteToPlay and noteToPlay2
  ([noteToPlay2 <- "A4"] -> !([noteToPlay <- "E4"]) && X ([noteToPlay <- "G4"] U !([noteToPlay2 <- "A4"])));

  // Guarantee that A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay2 <- "A4"] -> !(G ([noteToPlay <- "E4"])));

  // After E4 is played on noteToPlay, A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"] -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]));
}
```