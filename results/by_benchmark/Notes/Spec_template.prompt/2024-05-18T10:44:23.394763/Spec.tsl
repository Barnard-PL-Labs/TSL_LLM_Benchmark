always assume {
  // Define the ability for the user to push three different buttons
  (button1 || button2 || button3);
}

always guarantee {
  // When button1 is pushed, ensure that the musical note E4 is the next action to be played
  button1 -> X ([noteToPlay <- "E4"]);

  // When button2 is pushed, ensure that the musical note G4 is the next action to be played
  button2 -> X ([noteToPlay <- "G4"]);

  // When button3 is pushed, ensure that the musical note A4 is eventually played on noteToPlay2
  button3 -> F ([noteToPlay2 <- "A4"]);

  // Ensure E4 and A4 are not played at the same time on noteToPlay and noteToPlay2
  ([noteToPlay <- "E4"]) -> !([noteToPlay2 <- "A4"]);
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> G !([noteToPlay2 <- "A4"]);

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 
  // and G4 on noteToPlay, allowing for a sequence of notes or a chord
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
