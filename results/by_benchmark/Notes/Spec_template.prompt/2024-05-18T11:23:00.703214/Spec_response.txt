```tsl
always assume {
  // There are three buttons that can be pushed by the user
  button1 || button2 || button3;
}

always guarantee {
  // When button1 is pushed, E4 will eventually be played on noteToPlay
  button1 -> F ([noteToPlay <- "E4"]);
  
  // When button2 is pushed, G4 will eventually be played on noteToPlay
  button2 -> F ([noteToPlay <- "G4"]);
  
  // When button3 is pushed, A4 will eventually be played on noteToPlay2
  button3 -> F ([noteToPlay2 <- "A4"]);

  // If button1 or button2 is pushed, the respective note must be the next action
  button1 -> X ([noteToPlay <- "E4"]);
  button2 -> X ([noteToPlay <- "G4"]);

  // If A4 is played on noteToPlay2, then E4 cannot be played on noteToPlay at the same time
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]); 

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> X !(noteToPlay2 <- "A4");
  
  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
```