```
always assume {
  // There are three buttons that can be pushed by the user
  button1 || button2 || button3;
}

always guarantee {
  // When button1 is pushed, play note E4 on noteToPlay as the next action
  button1 -> X [noteToPlay <- "E4"];
  
  // When button2 is pushed, play note G4 on noteToPlay as the next action
  button2 -> X [noteToPlay <- "G4"];
  
  // When button3 is pushed, play note A4 on noteToPlay2 eventually
  button3 -> F [noteToPlay2 <- "A4"];
  
  // Ensure E4 on noteToPlay and A4 on noteToPlay2 are not played simultaneously
  ([noteToPlay <- "E4"] && X [noteToPlay2 <- "A4"]) -> false;
  
  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  [noteToPlay <- "E4"] -> (! [noteToPlay2 <- "A4"] W [noteToPlay <- !"E4"]);
  
  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  [noteToPlay <- "E4"] -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
```