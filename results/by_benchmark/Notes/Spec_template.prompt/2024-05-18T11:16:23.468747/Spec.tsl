always assume {
  // User interaction through buttons
  button1 || button2 || button3;
}

always guarantee {
  // Button1 triggers E4 note on noteToPlay, and it's the next action
  button1 -> X ([noteToPlay <- "E4"]);

  // Button2 triggers G4 note on noteToPlay, and it's the next action
  button2 -> X ([noteToPlay <- "G4"]);

  // Button3 triggers A4 note on noteToPlay2
  button3 -> F ([noteToPlay2 <- "A4"]);

  // Conditional relationships between noteToPlay and noteToPlay2
  // Prevent E4 on noteToPlay if A4 is playing on noteToPlay2
  ([noteToPlay2 <- "A4"]) -> G !(noteToPlay = "E4");

  // A4 on noteToPlay2 cannot be played until E4 has stopped on noteToPlay
  ([noteToPlay <- "E4"]) -> !F ([noteToPlay2 <- "A4"]);

  // If E4 is played, then A4 must eventually play on noteToPlay2, and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
