always assume {
  // Assume the user can push any of the three buttons
}

always guarantee {
  // Guarantee that pressing button1 writes E4 to noteToPlay, and it is the next action
  button1 -> X ([noteToPlay <- "E4"]);
  
  // Guarantee that pressing button2 writes G4 to noteToPlay, and it is the next action
  button2 -> X ([noteToPlay <- "G4"]);
  
  // Guarantee that pressing button3 writes A4 to noteToPlay2, allowing simultaneous sounds
  button3 -> X ([noteToPlay2 <- "A4"]);
  
  // Maintain exclusivity between E4 on noteToPlay and A4 on noteToPlay2
  ([noteToPlay <- "E4"]) -> !([noteToPlay2 <- "A4"]);
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);
  
  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> F (![noteToPlay <- "E4"] W [noteToPlay2 <- "A4"]);
  
  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
