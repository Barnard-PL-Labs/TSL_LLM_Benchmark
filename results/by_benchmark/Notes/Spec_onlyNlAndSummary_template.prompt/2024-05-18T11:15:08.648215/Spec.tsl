always assume {
  // Assumption about the user's ability to push buttons
  (button1 || button2 || button3);
}

always guarantee {
  // Guarantee when button1 is pushed
  button1 -> ([noteToPlay <- "E4"] && X ([noteToPlay <- "E4"] U (!button1)));

  // Guarantee when button2 is pushed
  button2 -> ([noteToPlay <- "G4"] && X ([noteToPlay <- "G4"] U (!button2)));

  // Guarantee when button3 is pushed
  button3 -> ([noteToPlay2 <- "A4"] && X ([noteToPlay2 <- "A4"] U (!button3)));

  // Mutual exclusivity between E4 on noteToPlay and A4 on noteToPlay2
  ([noteToPlay2 <- "A4"] -> !([noteToPlay <- "E4"]));
  ([noteToPlay <- "E4"] -> !([noteToPlay2 <- "A4"]));

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"] -> G (!([noteToPlay2 <- "A4"])));

  // Sequence or chord conditions
  ([noteToPlay <- "E4"] -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]));
}
