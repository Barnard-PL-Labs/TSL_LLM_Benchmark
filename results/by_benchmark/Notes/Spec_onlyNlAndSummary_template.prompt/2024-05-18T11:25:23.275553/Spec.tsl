always assume {
  // Assumptions about the user interaction with buttons
  (button1 || button2 || button3);
}

always guarantee {
  // Guarantees regarding the actions when buttons are pressed
  button1 -> F ([noteToPlay <- "E4"]);
  button2 -> F ([noteToPlay <- "G4"]);
  button3 -> F ([noteToPlay2 <- "A4"]);
  
  // Ensuring that the playing of notes is the next thing that happens
  button1 -> X ([noteToPlay <- "E4"]);
  button2 -> X ([noteToPlay <- "G4"]);
  button3 -> X ([noteToPlay2 <- "A4"]);
  
  // Preventing simultaneous play of E4 on noteToPlay and A4 on noteToPlay2
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // Ensuring A4 on noteToPlay2 does not play until E4 on noteToPlay has stopped
  [noteToPlay <- "E4"] -> (! [noteToPlay2 <- "A4"] W [noteToPlay <- ""]);
  
  // Sequence or chord progression rules
  [noteToPlay <- "E4"] -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
