always assume {
  // There are three distinct buttons that can be pressed by the user.
  ! (button1 && button2);
  ! (button1 && button3);
  ! (button2 && button3);
}

always guarantee {
  // When button1 is pressed, E4 must be the next note played on "noteToPlay"
  button1 -> X ([noteToPlay <- "E4"]);

  // When button2 is pressed, G4 must be the next note played on "noteToPlay"
  button2 -> X ([noteToPlay <- "G4"]);

  // When button3 is pressed, A4 will eventually be played on "noteToPlay2"
  button3 -> F ([noteToPlay2 <- "A4"]);

  // Ensuring that if A4 is on "noteToPlay2", E4 cannot be on "noteToPlay" at the same time
  ([noteToPlay2 <- "A4"]) -> (!([noteToPlay <- "E4"]));

  // A4 cannot play on "noteToPlay2" until E4 has stopped being played on "noteToPlay"
  ([noteToPlay2 <- "A4"]) -> (! G ([noteToPlay <- "E4"]));

  // If E4 is played on "noteToPlay", then A4 must eventually be played on "noteToPlay2"
  // and G4 on "noteToPlay", allowing a sequence or a chord
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
