Below is the TSL specification based on the given natural language description:

```tsl
always assume {
  // Three buttons which can be pushed by the user
  (button1 || button2 || button3);
}

always guarantee {
  // When button1 is pushed, E4 is eventually played and must be the next action
  button1 -> X ([noteToPlay <- "E4"]);
  
  // When button2 is pushed, G4 is eventually played and must be the next action
  button2 -> X ([noteToPlay <- "G4"]);
  
  // When button3 is pushed, A4 is eventually played on a separate variable and must be the next action
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Specific non-overlapping conditions between noteToPlay E4 and noteToPlay2 A4
  (button1 && [noteToPlay <- "E4"]) -> ![noteToPlay2 <- "A4"];
  (button3 && [noteToPlay2 <- "A4"]) -> ![noteToPlay <- "E4"];

  // Condition A4 cannot be played until E4 has stopped being played
  ([noteToPlay2 <- "A4"]) -> !(F [noteToPlay <- "E4"]);
  
  // If E4 is played, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
```

This TSL specification captures the assumed actions of pushing buttons and the corresponding guarantees of playing specific musical notes. It also includes conditions for mutual exclusivity of certain notes and sequences of note playing based on user actions.