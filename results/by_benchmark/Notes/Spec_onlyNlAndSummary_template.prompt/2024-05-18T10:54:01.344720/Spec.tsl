always assume {
  // Assumption about the buttons existence and their independent activation
  (button1 || button2 || button3);
}

always guarantee {
  // Guarantee that pressing button1 results in playing E4 on noteToPlay, and it's the next action
  button1 -> X ([noteToPlay <- "E4"]);
  
  // Guarantee that pressing button2 results in playing G4 on noteToPlay, and it's the next action
  button2 -> X ([noteToPlay <- "G4"]);
  
  // Guarantee that pressing button3 results in playing A4 on noteToPlay2, and it's the next action
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Ensure that if A4 is played on noteToPlay2, E4 cannot be played on noteToPlay at the same time
  ([noteToPlay2 <- "A4"] -> !([noteToPlay <- "E4"]));

  // A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay2 <- "A4"] -> (!([noteToPlay <- "E4"]) W ([noteToPlay <- ""])));

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 followed by G4 on noteToPlay
  ([noteToPlay <- "E4"] -> F([noteToPlay2 <- "A4"] && X ([noteToPlay <- "G4"])));
}
