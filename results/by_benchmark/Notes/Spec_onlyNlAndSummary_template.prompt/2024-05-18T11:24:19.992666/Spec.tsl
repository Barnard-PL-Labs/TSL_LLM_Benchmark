always assume {
  // Assume button1, button2, and button3 can be pressed by the user.
  (button1 || button2 || button3);
}

always guarantee {
  // Guarantee 1: When button1 is pushed, the musical note E4 will eventually be played on "noteToPlay".
  button1 -> F ([noteToPlay <- "E4"]);

  // Guarantee 2: When button2 is pushed, the musical note G4 will eventually be played on "noteToPlay".
  button2 -> F ([noteToPlay <- "G4"]);

  // Guarantee 3: When button3 is pushed, the musical note A4 will eventually be played on "noteToPlay2".
  button3 -> F ([noteToPlay2 <- "A4"]);

  // Guarantee 4: Ensure that when button1 or button2 is pushed, the respective note is written as the next action.
  button1 -> X ([noteToPlay <- "E4"]);
  button2 -> X ([noteToPlay <- "G4"]);

  // Guarantee 5: Ensure that E4 on "noteToPlay" and A4 on "noteToPlay2" cannot be played at the same time.
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // Guarantee 6: A4 cannot be played on "noteToPlay2" until E4 has stopped being played on "noteToPlay".
  ([noteToPlay <- "E4"]) -> (! [noteToPlay2 <- "A4"] W ![noteToPlay <- "E4"]);

  // Guarantee 7: If E4 is played on "noteToPlay", then A4 must eventually be played on "noteToPlay2" and G4 on "noteToPlay".
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
