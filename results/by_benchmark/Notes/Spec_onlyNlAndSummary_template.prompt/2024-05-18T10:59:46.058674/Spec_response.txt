Here is the TSL specification that captures the described functionality of the musical note system based on the user's interaction with buttons:

```tsl
always assume {
  // Assume that the buttons are mutually exclusive in their activation
  !(button1 && button2);
  !(button1 && button3);
  !(button2 && button3);
}

always guarantee {
  // Guarantee that pressing button1 will eventually lead to playing E4 on noteToPlay as the next action
  button1 -> X ([noteToPlay <- E4]);

  // Guarantee that pressing button2 will eventually lead to playing G4 on noteToPlay as the next action
  button2 -> X ([noteToPlay <- G4]);

  // Guarantee that pressing button3 will eventually lead to playing A4 on noteToPlay2
  button3 -> F ([noteToPlay2 <- A4]);

  // Ensure that if A4 is played on noteToPlay2, E4 cannot be played on noteToPlay at the same time
  ([noteToPlay2 <- A4]) -> !([noteToPlay <- E4]);

  // Ensure that A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- E4]) -> !F ([noteToPlay2 <- A4]);

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay, allowing for a sequence or a chord
  ([noteToPlay <- E4]) -> F ([noteToPlay2 <- A4] && [noteToPlay <- G4]);
}
```

This specification sets up the logic for how button presses correspond to the playing of musical notes, considering mutual exclusivity and sequential dependencies among notes. The guarantees ensure that the correct notes are played when buttons are pressed, with specific conditions on their temporal sequencing and exclusivity.