always assume {
  // Assumption about the exclusive push of buttons
  !(button1 && button2) && !(button1 && button3) && !(button2 && button3);
}

always guarantee {
  // Guarantee that pressing button1 leads to playing E4 as the next action
  button1 -> X ([noteToPlay <- "E4"]);
  
  // Guarantee that pressing button2 leads to playing G4 as the next action
  button2 -> X ([noteToPlay <- "G4"]);
  
  // Guarantee that pressing button3 leads to playing A4 as the next action on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Ensuring that E4 on noteToPlay and A4 on noteToPlay2 cannot be played simultaneously
  ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]) -> false;

  // Ensuring that A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay <- "E4"]) -> !F([noteToPlay2 <- "A4"]);

  // Sequence or chord: if E4 is played, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F([noteToPlay2 <- "A4"]) && F([noteToPlay <- "G4"]);
}
