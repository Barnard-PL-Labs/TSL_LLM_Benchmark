Here is the TSL specification based on the natural language description provided:

```tsl
always assume {
  // Define the exclusive relationship between pressing each button
  !(button1 && button2);
  !(button1 && button3);
  !(button2 && button3);
}

always guarantee {
  // When button1 is pushed, E4 will eventually be played and it must be the next action
  button1 -> XF ([noteToPlay <- "E4"]);
  
  // When button2 is pushed, G4 will eventually be played and it must be the next action
  button2 -> XF ([noteToPlay <- "G4"]);
  
  // When button3 is pushed, A4 will eventually be played on noteToPlay2 and it must be the next action
  button3 -> XF ([noteToPlay2 <- "A4"]);

  // If A4 is played on "noteToPlay2", then E4 cannot be played on "noteToPlay" at the same time
  ([noteToPlay2 <- "A4"]) -> X !(noteToPlay = "E4");
  
  // A4 cannot be played on "noteToPlay2" until E4 has stopped being played on "noteToPlay"
  ([noteToPlay <- "E4"]) -> !(X ([noteToPlay2 <- "A4"]) W ([noteToPlay <- "E4"]) = false);

  // If E4 is played on "noteToPlay", then A4 must eventually be played on "noteToPlay2" and G4 on "noteToPlay"
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
```

This TSL code accurately represents the constraints and behaviors described in the natural language input, using the temporal logic operators to ensure the correct sequencing and conditions for playing musical notes in response to button presses.