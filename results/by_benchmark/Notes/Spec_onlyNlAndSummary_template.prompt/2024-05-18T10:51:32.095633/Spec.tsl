always assume {
  // Users can push one of three buttons
  (button1 || button2 || button3);
}

always guarantee {
  // If button1 is pushed, E4 is the next note to play on noteToPlay
  button1 -> X ([noteToPlay <- "E4"]);
  
  // If button2 is pushed, G4 is the next note to play on noteToPlay
  button2 -> X ([noteToPlay <- "G4"]);
  
  // If button3 is pushed, A4 is the next note to play on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);

  // If A4 is playing on noteToPlay2, E4 cannot be played on noteToPlay simultaneously
  ([noteToPlay2 <- "A4"]) -> !([noteToPlay <- "E4"]);
  
  // E4 must stop playing on noteToPlay before A4 can play on noteToPlay2
  ([noteToPlay <- "E4"]) -> F (!([noteToPlay <- "E4"]) && X ([noteToPlay2 <- "A4"]));

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"]) -> F ([noteToPlay2 <- "A4"] && [noteToPlay <- "G4"]);
}
