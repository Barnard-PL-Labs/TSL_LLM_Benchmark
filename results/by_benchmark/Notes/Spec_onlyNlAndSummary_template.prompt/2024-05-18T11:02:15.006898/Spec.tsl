always assume {
  // Button presses are exclusive events
  !(button1 && button2);
  !(button1 && button3);
  !(button2 && button3);
}

always guarantee {
  // Guarantee 1: When button1 is pressed, E4 is the next note to be played on noteToPlay
  button1 -> X ([noteToPlay <- "E4"]);

  // Guarantee 2: When button2 is pressed, G4 is the next note to be played on noteToPlay
  button2 -> X ([noteToPlay <- "G4"]);

  // Guarantee 3: When button3 is pressed, A4 is the next note to be played on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Guarantee 5: If A4 is playing on noteToPlay2, E4 cannot play on noteToPlay at the same time
  [noteToPlay2 <- "A4"] -> ![noteToPlay <- "E4"];

  // Guarantee 6: A4 on noteToPlay2 cannot be played until E4 has stopped on noteToPlay
  ([noteToPlay <- "E4"]) -> !F([noteToPlay2 <- "A4"]);

  // Guarantee 7: If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2, and G4 on noteToPlay
  [noteToPlay <- "E4"] -> F([noteToPlay2 <- "A4"] && F([noteToPlay <- "G4"]));
}
