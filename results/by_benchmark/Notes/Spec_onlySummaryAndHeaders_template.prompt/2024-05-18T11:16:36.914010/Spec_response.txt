Here is the TSL specification based on your description:

```tsl
always assume {
  // Mutual exclusion for playing notes
  !(noteToPlay == "E4" && noteToPlay2 == "E4");
  !(noteToPlay == "G4" && noteToPlay2 == "G4");
  !(noteToPlay == "A4" && noteToPlay2 == "A4");
}

always guarantee {
  // Control logic for playing notes based on button presses
  pressButton1 -> [noteToPlay <- "E4"];
  pressButton2 -> [noteToPlay <- "G4"];
  pressButton3 -> [noteToPlay <- "A4"];
  pressButton1 && pressButton2 -> ([noteToPlay <- "E4"] && [noteToPlay2 <- "G4"]);
  pressButton1 && pressButton3 -> ([noteToPlay <- "E4"] && [noteToPlay2 <- "A4"]);
  pressButton2 && pressButton3 -> ([noteToPlay <- "G4"] && [noteToPlay2 <- "A4"]);
}
```

This TSL specification assumes that each button press corresponds to a specific musical note and allows for the simultaneous playing of two different notes. The mutual exclusion in assumptions ensures no note overlaps with itself on different channels.