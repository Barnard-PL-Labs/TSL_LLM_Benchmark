always assume {
  // If the ball is moved to the left, it is not at the rightmost wall in the next moment
  ([ball <- moveLeft(ball)] -> X !(rightmost(ball)));

  // If the ball is moved to the right, it is not at the leftmost wall in the next moment
  ([ball <- moveRight(ball)] -> X !(leftmost(ball)));

  // The ball cannot be at both the leftmost and the rightmost wall at the same time
  !(leftmost(ball) && rightmost(ball));
}

always guarantee {
  // If the ball is at the rightmost wall, it must eventually be moved to the left
  rightmost(ball) -> F ([ball <- moveLeft(ball)]);

  // If the ball is at the leftmost wall, it must eventually be moved to the right
  leftmost(ball) -> F ([ball <- moveRight(ball)]);

  // If the ball is neither at the leftmost nor the rightmost wall, it must be moved either to the left or to the right eventually
  !(leftmost(ball) || rightmost(ball)) -> F (([ball <- moveLeft(ball)]) || ([ball <- moveRight(ball)]));

  // If the ball is at the leftmost wall and is going to move away from it, it must not move to the left until it reaches the rightmost wall
  leftmost(ball) && X ([ball <- moveRight(ball)]) -> ([ball <- moveRight(ball)]) W rightmost(ball);

  // If the ball is at the rightmost wall and is going to move away from it, it must not move to the right until it reaches the leftmost wall
  rightmost(ball) && X ([ball <- moveLeft(ball)]) -> ([ball <- moveLeft(ball)]) W leftmost(ball);
}
