```tsl
always assume {
  // The ball cannot be in a position less than 0 or greater than 10.
  (ball.position >= 0 && ball.position <= 10);
  // When the ball is at the leftmost position, it can only move to the right.
  (leftmost(ball) -> X (!leftmost(ball)));
  // When the ball is at the rightmost position, it can only move to the left.
  (rightmost(ball) -> X (!rightmost(ball)));
}

always guarantee {
  // When the ball is at the leftmost position, move it to the right.
  leftmost(ball) -> [ball <- moveRight(ball)];
  // When the ball is at the rightmost position, move it to the left.
  rightmost(ball) -> [ball <- moveLeft(ball)];
}
```

This TSL specification defines a system where a ball continuously bounces between two boundaries represented by the positions 0 and 10. It utilizes predicates to check if the ball is against either wall and functions to move the ball in the appropriate direction. The assumptions ensure the ball remains within valid positions and behaves correctly at the boundaries.