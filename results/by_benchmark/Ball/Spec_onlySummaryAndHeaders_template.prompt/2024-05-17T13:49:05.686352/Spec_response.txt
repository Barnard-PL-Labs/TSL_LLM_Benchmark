Here's the TSL specification for the described scenario where a ball bounces between two walls, with its position ranging from 0 to 10:

```TSL
always assume {
  // The ball is at position 0 or 10
  (ball == 0 -> leftmost(ball));
  (ball == 10 -> rightmost(ball));
}

always guarantee {
  // When the ball is at the leftmost wall, it should move to the right
  leftmost(ball) -> [ball <- moveRight(ball)];

  // When the ball is at the rightmost wall, it should move to the left
  rightmost(ball) -> [ball <- moveLeft(ball)];

  // Ensure that the commands to move left and right are mutually exclusive
  !(leftmost(ball) && rightmost(ball));
}
```

This specification includes the following:
- **Assumptions** that define the conditions based on the position of the ball against the walls.
- **Guarantees** that specify how the ball should move when it hits either wall, ensuring mutual exclusion between moving left and right to reflect that the ball can only move in one direction at a time depending on its current position.