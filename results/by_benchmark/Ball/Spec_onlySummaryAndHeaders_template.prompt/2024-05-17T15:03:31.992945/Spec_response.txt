Here is a TSL specification based on your description of a ball bouncing between two walls, using the functions and predicates provided:

```tsl
always assume {
  // Define the behavior of the ball when it reaches the walls
  (leftmost(ball) -> X (!leftmost(ball)));
  (rightmost(ball) -> X (!rightmost(ball)));
}

always guarantee {
  // When the ball hits the leftmost wall, it should start moving right on the next move
  leftmost(ball) -> X ([ball <- moveRight(ball)]);

  // When the ball hits the rightmost wall, it should start moving left on the next move
  rightmost(ball) -> X ([ball <- moveLeft(ball)]);
}
```

This specification captures the essential dynamics of a ball bouncing between two walls, changing direction each time it hits a wall. It uses the `leftmost` and `rightmost` predicates to determine the ball's position relative to the walls and assigns the corresponding movement functions to reverse the ball's direction.