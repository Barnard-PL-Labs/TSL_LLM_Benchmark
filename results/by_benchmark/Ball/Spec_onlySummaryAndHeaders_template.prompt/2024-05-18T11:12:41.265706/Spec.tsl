always assume {
  // Assumptions about the ball's state when it reaches the leftmost or rightmost wall
  (leftmost(ball) -> X (!leftmost(ball))); // Next state, not on the leftmost if just there
  (rightmost(ball) -> X (!rightmost(ball))); // Next state, not on the rightmost if just there
}

always guarantee {
  // The ball bounces between two walls
  leftmost(ball) -> X [ball <- moveRight(ball)]; // Move right when at leftmost
  rightmost(ball) -> X [ball <- moveLeft(ball)]; // Move left when at rightmost

  // Ensure the ball moves continuously left or right if not at the walls
  (!leftmost(ball) && !rightmost(ball))
    -> (([ball <- moveLeft(ball)] W rightmost(ball)) || ([ball <- moveRight(ball)] W leftmost(ball)));
}
