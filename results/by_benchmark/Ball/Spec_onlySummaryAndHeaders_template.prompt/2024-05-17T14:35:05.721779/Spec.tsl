always assume {
  // Assume that the ball can only be at the furthest left or right position before moving in the opposite direction
  (rightmost(ball) -> X !rightmost(ball));
  (leftmost(ball) -> X !leftmost(ball));
}

always guarantee {
  // Guarantee that if the ball is at the leftmost position, it should start moving right on the next state
  leftmost(ball) -> X ([ball <- moveRight(ball)]);

  // Guarantee that if the ball is at the rightmost position, it should move left on the next state
  rightmost(ball) -> X ([ball <- moveLeft(ball)]);

  // Ensure that if the ball is not at either boundary, it continues in the current direction
  (!leftmost(ball) && !rightmost(ball)) -> ([ball <- ball]);
}
