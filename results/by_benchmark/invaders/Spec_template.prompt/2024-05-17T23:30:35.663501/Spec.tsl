always assume {
  // Mutual exclusion for key inputs
  !(pressL && pressR);
  !(pressL && pressUp);
  !(pressL && pressDown);
  !(pressR && pressUp);
  !(pressR && pressDown);
  !(pressUp && pressDown);
}

always guarantee {
  // If the ship is hit, end game or lose life
  hit(ship) -> [die(ship)];

  // Movement and shooting control
  // When the left key is pressed, move the ship to the left unless it's at the leftmost position
  pressL && !leftmost(ship) -> [moveLeft(ship)];
  
  // When the right key is pressed, move the ship to the right unless it's at the rightmost position
  pressR && !rightmost(ship) -> [moveRight(ship)];
  
  // When the shoot key is pressed, execute shooting action
  pressS -> [shoot(ship)];

  // Ensure that no movement occurs if the ship is at the boundaries
  pressL && leftmost(ship) -> [moveLeft(ship) <- moveLeft(ship)];
  pressR && rightmost(ship) -> [moveRight(ship) <- moveRight(ship)];
}
