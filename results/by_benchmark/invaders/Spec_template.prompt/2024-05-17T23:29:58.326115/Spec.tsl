always assume {
  // Mutual exclusion for key inputs to prevent conflicting movements
  !(pressL(e) && pressR(e));
  !(pressL(e) && pressUp(e));
  !(pressL(e) && pressDown(e));
  !(pressR(e) && pressUp(e));
  !(pressR(e) && pressDown(e));
  !(pressUp(e) && pressDown(e));
}

always guarantee {
  // Ship movement and action handling
  // Left movement: if the left key is pressed and the ship is not already at the leftmost position
  pressL(e) && !leftmost(ship) -> [moveLeft(ship)];
  
  // Right movement: if the right key is pressed and the ship is not already at the rightmost position
  pressR(e) && !rightmost(ship) -> [moveRight(ship)];
  
  // Shooting action: if the shoot key is pressed
  pressShoot(e) -> [shoot(ship)];
  
  // Ship hit detection: if the ship has been hit
  hit(ship) -> [die(ship)];
}
