Here is the TSL specification for the described behavior of a player's ship in the game Space Invaders:

```
always assume {
    // Mutual Exclusion for Key Inputs to prevent simultaneous directional movements
    !(pressL && pressR);
    !(pressL && pressUp);
    !(pressL && pressDown);
    !(pressR && pressUp);
    !(pressR && pressDown);
    !(pressUp && pressDown);
}

always guarantee {
    // Movements and Actions
    // Left Movement
    pressL -> ((!leftmost(ship)) -> [ship <- moveLeft(ship)]);
    
    // Right Movement
    pressR -> ((!rightmost(ship)) -> [ship <- moveRight(ship)]);
    
    // Shooting Action
    pressS -> [ship <- shoot(ship)];
    
    // Ship Hit Detection
    hit(ship) -> [ship <- die(ship)];
}
```

Explanation:
1. **Mutual Exclusion**: The assumptions ensure that no two directional keys (or conflicting actions like up and down) can be pressed at the same time, which prevents ambiguous or conflicting ship movements.

2. **Guarantees**:
   - **Left Movement**: When the left key is pressed and the ship is not at the leftmost position, the ship moves left.
   - **Right Movement**: Similarly, when the right key is pressed and the ship is not at the rightmost position, the ship moves right.
   - **Shooting Action**: When the shoot key is pressed, a shooting action is initiated by the ship.
   - **Ship Hit Detection**: If the ship is hit, the specified consequence (like triggering a game over or losing a life) is activated, represented by the `die(ship)` function.

This specification articulates the behavior of the ship based on key inputs and interactions with game elements, providing clear rules for movement and responses to game events.