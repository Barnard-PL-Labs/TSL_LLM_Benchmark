always assume {
  // Ensure mutual exclusion for directional inputs
  !(pressL(ship) && pressR(ship));
  !(pressL(ship) && pressUp(ship));
  !(pressL(ship) && pressDown(ship));
  !(pressR(ship) && pressUp(ship));
  !(pressR(ship) && pressDown(ship));
  !(pressUp(ship) && pressDown(ship));
  
  // Define the states for when the ship is hit
  (hit(ship) -> [ ship.status <- die(ship) ]);
  
  // Boundary conditions for the ship
  (leftmost(ship) -> !(pressL(ship)));
  (rightmost(ship) -> !(pressR(ship)));
}

always guarantee {
  // Handling the left movement
  pressL(ship) -> [ ship.position.x <- moveLeft(ship) ];
  
  // Handling the right movement
  pressR(ship) -> [ ship.position.x <- moveRight(ship) ];

  // Handling the shooting action
  pressShoot(ship) -> [ ship.action <- shoot(ship) ];

  // If the ship is hit, trigger the die action
  hit(ship) -> [ ship.status <- die(ship) ];
}
