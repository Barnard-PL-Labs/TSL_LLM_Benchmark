always assume {
  // Mutual exclusion for key inputs to prevent simultaneous contradictory movements
  !(pressL(e) && pressR(e));
  !(pressL(e) && pressU(e));
  !(pressL(e) && pressD(e));
  !(pressR(e) && pressU(e));
  !(pressR(e) && pressD(e));
  !(pressU(e) && pressD(e));
}

always guarantee {
  // If the ship is hit, set the dead flag
  hit(ship) -> [dead(ship) <- 1];

  // Left Movement: move the ship left unless it is already at the leftmost position
  pressL(e) && !leftmost(ship) -> [moveLeft(ship)];

  // Right Movement: move the ship right unless it is already at the rightmost position
  pressR(e) && !rightmost(ship) -> [moveRight(ship)];

  // Shooting Action: trigger shooting mechanism
  pressS(e) -> [shoot(ship)];
}
