always assume {
  // Mutual exclusion for key inputs (Only one directional input is processed at any given time)
  !(pressL(ship) && pressR(ship));
  !(pressL(ship) && pressUp(ship));
  !(pressL(ship) && pressDown(ship));
  !(pressR(ship) && pressUp(ship));
  !(pressR(ship) && pressDown(ship));
  !(pressUp(ship) && pressDown(ship));
}

always guarantee {
  // Ship hit detection
  hit(ship) -> [die(ship)];

  // Left Movement
  pressL(ship) -> (
    leftmost(ship) -> [command(ship) <- idle]; // If already at leftmost, no movement
    !leftmost(ship) -> [command(ship) <- moveLeft(ship)]
  );

  // Right Movement
  pressR(ship) -> (
    rightmost(ship) -> [command(ship) <- idle]; // If already at rightmost, no movement
    !rightmost(ship) -> [command(ship) <- moveRight(ship)]
  );

  // Shooting Action
  pressS(ship) -> [command(ship) <- shoot(ship)];
}
