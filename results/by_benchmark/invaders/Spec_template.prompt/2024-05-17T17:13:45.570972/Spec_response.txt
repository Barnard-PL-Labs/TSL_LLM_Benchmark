Here is the TSL specification based on the provided natural language description for the behavior of a player's ship in the game Space Invaders:

```tsl
always assume {
  // Mutual exclusion for key inputs (Only one directional input is processed at any given time)
  !(pressL(ship) && pressR(ship));
  !(pressL(ship) && pressUp(ship));
  !(pressL(ship) && pressDown(ship));
  !(pressR(ship) && pressUp(ship));
  !(pressR(ship) && pressDown(ship));
  !(pressUp(ship) && pressDown(ship));
}

always guarantee {
  // Ship hit detection
  hit(ship) -> [die(ship)];

  // Left Movement
  pressL(ship) -> (
    leftmost(ship) -> [command(ship) <- idle]; // If already at leftmost, no movement
    !leftmost(ship) -> [command(ship) <- moveLeft(ship)]
  );

  // Right Movement
  pressR(ship) -> (
    rightmost(ship) -> [command(ship) <- idle]; // If already at rightmost, no movement
    !rightmost(ship) -> [command(ship) <- moveRight(ship)]
  );

  // Shooting Action
  pressS(ship) -> [command(ship) <- shoot(ship)];
}
```

### Explanation:
1. **Mutual Exclusion for Key Inputs:** 
   - Ensures that no two directional keys are pressed simultaneously, which would result in conflicting movements. This is achieved by assuming it's never the case that any two out of the specified key combinations are true at the same time.

2. **Ship Hit Detection:** 
   - When the ship is hit (`hit(ship)`), the action to die (`die(ship)`) is triggered. This might end the game or subtract a life, depending on game mechanics.

3. **Left Movement:** 
   - When the left key is pressed (`pressL(ship)`), the command to move left (`moveLeft(ship)`) is issued unless the ship is already at the leftmost border (`leftmost(ship)`), in which case no movement command is issued (`idle`).

4. **Right Movement:** 
   - Similar to left movement, but for the right direction. The ship moves right unless it is at the rightmost border.

5. **Shooting Action:** 
   - When the shoot key is pressed (`pressS(ship)`), a shooting command (`shoot(ship)`) is executed, which might represent firing a projectile in the game.

This TSL specification models the basic responsive controls for a player's ship in a space-themed shooting game.