Here's the TSL specification for the described control system for a cube with two buttons:

```
always assume {
  // Ensure that the left and right buttons are not pressed simultaneously
  !(pressL(e) && pressR(e));
}

always guarantee {
  // When the left button is pressed, rotate the cube to the left until the right button is pressed
  pressL(e) -> [cube <- rotateLeft(cube)] W pressR(e);
  
  // When the right button is pressed, rotate the cube to the right until the left button is pressed
  pressR(e) -> [cube <- rotateRight(cube)] W pressL(e);
}
```

This TSL code snippet assumes that pressing both buttons at the same time is impossible (mutually exclusive). It guarantees that pressing the left button will rotate the cube to the left until the right button is pressed, and vice versa. The cube's rotation direction changes only when the opposite button is pressed, ensuring continuous rotation in one direction until the other button influences it.