To implement the specified methods using JavaScript, you'll need to define functions for rotating the cube to the left or to the right. Additionally, you'll implement predicates to detect when the left or right button is pressed. Below are the JavaScript implementations for both functions and predicates.

### Functions:
1. **rotateLeft(cube)**
   - This function will rotate the cube to the left by decrementing the `y` rotation.

2. **rotateRight(cube)**
   - This function will rotate the cube to the right by incrementing the `y` rotation.

### Predicates:
1. **pressL(e)**
   - This predicate will return true if the left button (commonly represented by key 'L' or left arrow) is pressed.

2. **pressR(e)**
   - This predicate will return true if the right button (commonly represented by key 'R' or right arrow) is pressed.

Here's the JavaScript implementation:

```javascript
// Function to rotate the cube to the left
function rotateLeft(cube) {
    // Assuming cube.rotation.y is accessible and represents the y-axis rotation
    cube.rotation.y -= 0.1; // Rotate left by reducing the y rotation value
}

// Function to rotate the cube to the right
function rotateRight(cube) {
    // Assuming cube.rotation.y is accessible and represents the y-axis rotation
    cube.rotation.y += 0.1; // Rotate right by increasing the y rotation value
}

// Predicate to detect if the left button is pressed
function pressL(event) {
    // Check if the 'ArrowLeft' or 'L' key is pressed
    return event.key === 'ArrowLeft' || event.key === 'L';
}

// Predicate to detect if the right button is pressed
function pressR(event) {
    // Check if the 'ArrowRight' or 'R' key is pressed
    return event.key === 'ArrowRight' || event.key === 'R';
}

// Example usage of pressL and pressR within an event listener
document.addEventListener('keydown', function(event) {
    if (pressL(event)) {
        console.log('Left button pressed');
        // Call rotateLeft function with the cube object
        rotateLeft(cube);
    } else if (pressR(event)) {
        console.log('Right button pressed');
        // Call rotateRight function with the cube object
        rotateRight(cube);
    }
});
```

### Notes:
- This code assumes that the `cube` object has a property `rotation` with a sub-property `y` that can be modified to rotate the cube.
- The `rotateLeft` and `rotateRight` functions modify the `cube.rotation.y` directly to rotate the cube.
- The event listeners for `pressL` and `pressR` are set up to listen to the `keydown` event. Depending on your application's requirements, you might need to adjust this setup.
- The rotation increment/decrement value (`0.1`) can be adjusted based on how fast you want the cube to rotate.