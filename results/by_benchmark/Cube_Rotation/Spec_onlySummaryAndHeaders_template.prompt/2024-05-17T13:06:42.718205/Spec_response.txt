Here is the TSL specification based on your description for the cube control system using the provided functions and predicates:

```tsl
always assume {
  // Define the exclusive relationship between pressing the right button and the left button
  !(pressR(e) && pressL(e));
}

always guarantee {
  // When the left button is pressed, rotate the cube to the left, until the right button is pressed
  pressL(e) -> ([cube <- rotateLeft(cube)] W pressR(e));

  // When the right button is pressed, rotate the cube to the right, until the left button is pressed
  pressR(e) -> ([cube <- rotateRight(cube)] W pressL(e));
}
```

Explanation:
- The `always assume` block ensures that both the left and right buttons cannot be pressed simultaneously. This is a safety constraint to prevent conflicting commands.
- The `always guarantee` block specifies the behavior of the cube in response to button presses. If the left button is pressed (`pressL(e)`), the cube will continue to rotate left (`rotateLeft(cube)`) until the right button is pressed (`pressR(e)`), and vice versa for the right button. This maintains the rotation direction consistently until the opposite button is pressed, as per the provided natural language description.