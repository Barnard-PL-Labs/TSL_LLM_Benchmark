Here is the TSL specification based on your requirements for a control system where two buttons influence a cube's rotation, ensuring mutual exclusivity between button presses and managing the rotation direction accordingly:

```tsl
always assume {
  // Ensure that both buttons are not pressed simultaneously
  !(pressL(e) && pressR(e));
}

always guarantee {
  // When the left button is pressed, rotate the cube to the left until the right button is pressed
  pressL(e) -> ([cube <- rotateLeft(cube)] W pressR(e));

  // When the right button is pressed, rotate the cube to the right until the left button is pressed
  pressR(e) -> ([cube <- rotateRight(cube)] W pressL(e));
}
```

This specification sets up the mutual exclusion of button presses in the `always assume` block, ensuring that pressing both buttons simultaneously is not possible. In the `always guarantee` block, it defines the behavior of the cube's rotation in response to each button press, maintaining the current rotation command until the opposing button is pressed.