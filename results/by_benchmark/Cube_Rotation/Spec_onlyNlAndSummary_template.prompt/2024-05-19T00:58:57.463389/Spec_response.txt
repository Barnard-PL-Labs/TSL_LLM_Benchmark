Here is how the natural language description can be translated into a TSL specification:

```tsl
always assume {
  // Assumption that left and right buttons are not pressed at the same time
  !(pressLeft && pressRight);
}

always guarantee {
  // Guarantee that if the left button is pressed, the cube begins rotating to the left until the right button is pressed
  pressLeft -> ([cube.rotation <- "left"] W pressRight);

  // Guarantee that if the right button is pressed, the cube rotates to the right until the left button is pressed
  pressRight -> ([cube.rotation <- "right"] W pressLeft);
}
```

### Explanation:
1. **Assumptions:**
    - The `always assume` block contains a condition that the `pressLeft` and `pressRight` buttons cannot be pressed simultaneously. This is crucial to prevent conflicting commands for cube rotation.

2. **Guarantees:**
    - The `always guarantee` block defines the behavior of the cube based on the button presses:
      - When the `pressLeft` button is pressed, the cube's rotation direction is set to `"left"` and this continues until the `pressRight` button is pressed.
      - When the `pressRight` button is pressed, the cube's rotation direction is set to `"right"` and this continues until the `pressLeft` button is pressed.
      
    - This setup ensures that the cube's rotation direction remains consistent and only changes upon the pressing of the opposite button, allowing for a controlled and conflict-free user interaction with the cube's rotation.