Here is the TSL specification based on your description of the control system for a cube's rotation with left and right buttons:

```tsl
always assume {
  // Ensure that left and right buttons are never pressed simultaneously
  !(pressLeft && pressRight);
}

always guarantee {
  // If the left button is pressed, the cube should rotate to the left until the right button is pressed
  pressLeft -> [cube.rotation <- "left"] W pressRight;

  // If the right button is pressed, the cube should rotate to the right until the left button is pressed
  pressRight -> [cube.rotation <- "right"] W pressLeft;
}
```

### Explanation:
- **Assumptions**:
  - `!(pressLeft && pressRight)`: Ensures mutual exclusion between the pressing of the left and right buttons. This assumption prevents both buttons from being pressed at the same time, avoiding conflicts in rotation commands.

- **Guarantees**:
  - `pressLeft -> [cube.rotation <- "left"] W pressRight`: Specifies that if the left button is pressed, the cube's rotation will be set to "left". This rotation will continue until the right button is pressed, at which point the cube's rotation might change based on the state associated with the right button press.
  - `pressRight -> [cube.rotation <- "right"] W pressLeft`: Analogous to the left button behavior, if the right button is pressed, the cube's rotation will be set to "right" and will continue until the left button is pressed. 

This TSL specification fulfills the requirement of ensuring smooth and conflict-free control over the cube's rotation direction, allowing the user to determine the direction of rotation by pressing the respective buttons.