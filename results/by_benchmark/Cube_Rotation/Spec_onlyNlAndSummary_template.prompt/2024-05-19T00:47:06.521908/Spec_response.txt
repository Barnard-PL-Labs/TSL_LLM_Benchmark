Here's the TSL specification based on your natural language description:

```tsl
always assume {
  // Ensure left and right buttons are never pressed simultaneously
  !(pressLeft && pressRight);
}

always guarantee {
  // When the left button is pressed, begin rotating left and continue until the right button is pressed
  pressLeft -> ([cube.rotation <- "left"] W pressRight);

  // When the right button is pressed, begin rotating right and continue until the left button is pressed
  pressRight -> ([cube.rotation <- "right"] W pressLeft);
}
```

This TSL code snippet accurately captures the requirements you specified, using temporal logic to manage the mutual exclusivity of button presses and the continuous rotation of the cube based on the last button pressed. The cube's rotation direction is maintained until the opposite button is pressed, ensuring smooth and conflict-free control.