To implement the described methods using JavaScript, we'll first write the functions to rotate the cube left and right. Then, we'll set up event listeners for the predicates that check if the left or right button is pressed.

### JavaScript Implementation

**Functions:**
```javascript
// Function to rotate the cube to the left
function rotateLeft(cube) {
    // Assuming that rotating left means decrementing the rotation on the y-axis
    cube.rotation.y -= Math.PI / 2;  // Rotate by 90 degrees
    console.log("Rotated Left: cube.rotation.y =", cube.rotation.y);
}

// Function to rotate the cube to the right
function rotateRight(cube) {
    // Assuming that rotating right means incrementing the rotation on the y-axis
    cube.rotation.y += Math.PI / 2;  // Rotate by 90 degrees
    console.log("Rotated Right: cube.rotation.y =", cube.rotation.y);
}
```

**Predicates:**
To detect button presses, we can use JavaScript's `addEventListener` for keyboard events like 'keydown'. Assuming the left and right arrows (or other specific keys) are the triggers:

```javascript
// Predicate to check if the left button is pressed
function pressL(e) {
    return e.key === 'ArrowLeft';  // Returns true if the left arrow key is pressed
}

// Predicate to check if the right button is pressed
function pressR(e) {
    return e.key === 'ArrowRight';  // Returns true if the right arrow key is pressed
}

// Setting up the event listeners for key presses
document.addEventListener('keydown', function(e) {
    if (pressL(e)) {
        console.log("Left button pressed");
        rotateLeft(cube);
    } else if (pressR(e)) {
        console.log("Right button pressed");
        rotateRight(cube);
    }
});
```

### Explanation:
1. **rotateLeft** and **rotateRight** functions adjust the `rotation.y` property of the `cube` object to simulate the rotation. The rotation amount is set to 90 degrees (Ï€/2 radians) for simplicity and clear demonstration.

2. **pressL** and **pressR** are predicates. They check if the event `e` that occurs (from a key press) matches the left or right arrow keys respectively.

3. An event listener is attached to the document to listen to 'keydown' events. When a key is pressed, it checks whether it was the left or right arrow key using the predicates. If a match is found, the respective rotation function is called to rotate the cube.

Ensure that the `cube` object is properly defined with a `rotation` property, and this script is integrated in an environment where such manipulations are supported (like a 3D graphics JavaScript library such as Three.js).