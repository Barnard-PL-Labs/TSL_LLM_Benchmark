Here is the TSL specification based on your requirements:

```
always assume {
  // Asserting that left and right buttons are not pressed simultaneously
  !(pressL(e) && pressR(e));
}

always guarantee {
  // When the left button is pressed, initiate and continue rotation to the left until the right button is pressed
  pressL(e) -> [cube <- rotateLeft(cube)] W pressR(e);

  // Conversely, when the right button is pressed, initiate and continue rotation to the right until the left button is pressed
  pressR(e) -> [cube <- rotateRight(cube)] W pressL(e);
}
```

This specification correctly encapsulates the logic for a cube rotation system where the left and right button inputs manipulate the rotation direction, adhering to the constraints that both buttons cannot be pressed at the same time and the rotation in a specific direction continues until the other button is pressed.