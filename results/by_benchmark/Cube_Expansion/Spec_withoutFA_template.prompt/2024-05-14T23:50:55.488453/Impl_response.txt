Since the task involves implementing predicates without using functions, and specifically focusing on the predicate `pressUp(e)`, here's a JavaScript implementation to determine if the up arrow key is pressed using an event listener:

```javascript
// Initialize a variable to track the state of the 'up' arrow key.
let isUpKeyPressed = false;

// Add event listeners to the document to update the state of the 'up' arrow key.
document.addEventListener('keydown', function(e) {
    if (e.key === 'ArrowUp') {
        isUpKeyPressed = true;
    }
});

document.addEventListener('keyup', function(e) {
    if (e.key === 'ArrowUp') {
        isUpKeyPressed = false;
    }
});

// Create a predicate to check if the 'up' arrow key is pressed.
function pressUp() {
    return isUpKeyPressed;
}
```

This code sets up listeners for `keydown` and `keyup` events on the entire document. When the up arrow key is pressed (and held down), the `keydown` event triggers, setting `isUpKeyPressed` to `true`. When the up arrow key is released, the `keyup` event triggers, setting `isUpKeyPressed` to `false`. The function `pressUp` serves as a predicate to check the current state of the up arrow key.

This predicate can be utilized wherever needed to check the pressing state of the up arrow key in your application logic, following the system's API and conditions set forth in your task.