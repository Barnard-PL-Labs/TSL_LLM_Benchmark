To implement the predicate `pressUp(e)` for checking if the up arrow key is pressed on the keyboard, you can use JavaScript to add an event listener for the `keydown` event on the `document` object. Here is an example of how you can achieve this:

```javascript
// Define a variable that will keep track of the pressing state of the up arrow key
let isUpKeyPressed = false;

// Add an event listener to the document for the "keydown" event
document.addEventListener('keydown', function(event) {
    if (event.key === 'ArrowUp') {  // Check if the key pressed is the up arrow key
        isUpKeyPressed = true;      // Set the isUpKeyPressed flag to true
    }
});

// Add an event listener to the document for the "keyup" event
document.addEventListener('keyup', function(event) {
    if (event.key === 'ArrowUp') {  // Check if the key released is the up arrow key
        isUpKeyPressed = false;     // Set the isUpKeyPressed flag back to false
    }
});

// Predicate function to check if the up arrow key is pressed
function pressUp() {
    return isUpKeyPressed;
}
```

Here's how the code works:
1. We define a boolean variable `isUpKeyPressed` that will maintain the state of the up arrow key.
2. We add an event listener for the `keydown` event to the `document` object. Inside this event listener, if the key pressed is the up arrow key (detected by `event.key === 'ArrowUp'`), we set `isUpKeyPressed` to `true`.
3. We also add a `keyup` event listener where we check if the up arrow key has been released (`event.key === 'ArrowUp'`). If so, we reset `isUpKeyPressed` to `false`.
4. The function `pressUp()` simply returns the value of `isUpKeyPressed`, indicating whether the up arrow key is currently being pressed or not.