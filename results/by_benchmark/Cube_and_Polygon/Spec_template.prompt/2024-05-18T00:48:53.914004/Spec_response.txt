Here is the TSL specification based on the given description and requirements:

```tsl
always assume {
  // It is assumed that the left and right buttons are never pressed simultaneously.
  !(pressL(e) && pressR(e));
}

always guarantee {
  // When the right key is pressed, increment the count by 0.1 until the left key is pressed
  pressR(e) -> ([count <- count + 0.1] W pressL(e));
  
  // When the left key is pressed, decrement the count by 0.1 until the right key is pressed
  pressL(e) -> ([count <- count - 0.1] W pressR(e));

  // The rotation of the cube along the y-axis follows the sine of twice the count value
  [cube.rotation.y <- sin(2 * count)];

  // The rotation of the polygon along the y-axis follows the sawtooth wave pattern of 0.5 times (1 plus the count value)
  [polygon.rotation.y <- saw(0.5 * (1 + count))];

  // The x-position of the cube is fixed at 1
  [cube.position.x <- 1];

  // The x-position of the polygon is fixed at 3
  [polygon.position.x <- 3];
}
```

This TSL specification sets up the environment assumptions and the system guarantees to manage the interactive graphical objects based on user inputs. It controls the rotation and position of the cube and polygon through specified mathematical functions and ensures that user inputs from the left and right keys affect the 'count' variable in a mutually exclusive manner.