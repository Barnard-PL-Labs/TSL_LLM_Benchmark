always assume {
  // Assume that left and right buttons are never pressed simultaneously.
  !(pressL(e) && pressR(e));
}

always guarantee {
  // When the right key is pressed, increment the count value by 0.1.
  // This increment continues until the left key is pressed.
  pressR(e) -> ([count <- count + 0.1] W pressL(e));

  // When the left key is pressed, decrement the count value by 0.1.
  // This decrement continues until the right key is pressed.
  pressL(e) -> ([count <- count - 0.1] W pressR(e));

  // The rotation of the cube along the y-axis is set to the sine of twice the count value.
  // Continuously updating as count changes.
  [cube.rotation.y <- sin(2 * count)];

  // The rotation of a polygon along the y-axis follows a sawtooth pattern,
  // which is calculated as the saw of 0.5 times (1 plus the count value).
  // Continuously updating as count changes.
  [polygon.rotation.y <- saw(0.5 * (1 + count))];

  // The x-position of the cube is fixed at 1.
  [cube.position.x <- 1];

  // The x-position of the polygon is fixed at 3.
  [polygon.position.x <- 3];
}
