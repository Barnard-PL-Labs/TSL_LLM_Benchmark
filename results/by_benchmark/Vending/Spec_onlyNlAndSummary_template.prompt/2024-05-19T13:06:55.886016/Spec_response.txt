```tsl
always assume {
  // Ensure mutual exclusivity between button presses
  !(pressD && pressQ) && !(pressD && pressO) && !(pressD && press1) && !(pressD && press2) && !(pressD && press3) && !(pressD && pressR) &&
  !(pressQ && pressO) && !(pressQ && press1) && !(pressQ && press2) && !(pressQ && press3) && !(pressQ && pressR) &&
  !(pressO && press1) && !(pressO && press2) && !(pressO && press3) && !(pressO && pressR) &&
  !(press1 && press2) && !(press1 && press3) && !(press1 && pressR) &&
  !(press2 && press3) && !(press2 && pressR) &&
  !(press3 && pressR);
}

always guarantee {
  // Handle the dime insertion by adding 0.1 to total
  pressD -> [total <- total + 0.1];

  // Handle the quarter insertion by adding 0.25 to total
  pressQ -> [total <- total + 0.25];

  // Handle the dollar insertion by adding 1 to total
  pressO -> [total <- total + 1];

  // Handle the purchase of product option 1 by subtracting 0.75 from total if the balance is sufficient
  (press1 && total >= 0.75) -> [total <- total - 0.75];

  // Handle the purchase of product option 2 by subtracting 1 from total if the balance is sufficient
  (press2 && total >= 1) -> [total <- total - 1];

  // Handle the purchase of product option 3 by subtracting 1.25 from total if the balance is sufficient
  (press3 && total >= 1.25) -> [total <- total - 1.25];

  // Handle refund by setting total to 0
  pressR -> [total <- 0];
}
```