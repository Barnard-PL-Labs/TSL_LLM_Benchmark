```tsl
always assume {
  // Ensure that no two operations happen at the same time
  !(pressD && pressQ) && !(pressD && pressO) && !(pressD && press1) && !(pressD && press2) && !(pressD && press3) && !(pressD && pressR) &&
  !(pressQ && pressO) && !(pressQ && press1) && !(pressQ && press2) && !(pressQ && press3) && !(pressQ && pressR) &&
  !(pressO && press1) && !(pressO && press2) && !(pressO && press3) && !(pressO && pressR) &&
  !(press1 && press2) && !(press1 && press3) && !(press1 && pressR) &&
  !(press2 && press3) && !(press2 && pressR) &&
  !(press3 && pressR);
}

always guarantee {
  // Increment total by 0.1 when pressD is pushed
  pressD -> [total <- total + 0.1];
  
  // Increment total by 0.25 when pressQ is pushed
  pressQ -> [total <- total + 0.25];
  
  // Increment total by 1 when pressO is pushed
  pressO -> [total <- total + 1];
  
  // Decrement total by 0.75 when press1 is pushed, if total is 0.75 or greater
  press1 && total >= 0.75 -> [total <- total - 0.75];
  
  // Decrement total by 1 when press2 is pushed, if total is 1 or greater
  press2 && total >= 1 -> [total <- total - 1];
  
  // Decrement total by 1.25 when press3 is pushed, if total is 1.25 or greater
  press3 && total >= 1.25 -> [total <- total - 1.25];
  
  // Set total to 0 when pressR is pushed
  pressR -> [total <- 0];
}
```