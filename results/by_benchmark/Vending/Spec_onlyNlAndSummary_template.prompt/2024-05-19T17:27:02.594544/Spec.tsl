always assume {
  // Mutual exclusion for all button presses; only one can be pressed at a time
  !(pressD && pressQ) && !(pressD && pressO) && !(pressD && press1) && !(pressD && press2) && !(pressD && press3) && !(pressD && pressR) &&
  !(pressQ && pressO) && !(pressQ && press1) && !(pressQ && press2) && !(pressQ && press3) && !(pressQ && pressR) &&
  !(pressO && press1) && !(pressO && press2) && !(pressO && press3) && !(pressO && pressR) &&
  !(press1 && press2) && !(press1 && press3) && !(press1 && pressR) &&
  !(press2 && press3) && !(press2 && pressR) &&
  !(press3 && pressR);
}

always guarantee {
  // When "d" is pressed, increment total by 0.1
  pressD -> [total <- total + 0.1];

  // When "q" is pressed, increment total by 0.25
  pressQ -> [total <- total + 0.25];

  // When "o" is pressed, increment total by 1
  pressO -> [total <- total + 1];

  // When "1" is pressed and the total is >= 0.75, decrement total by 0.75
  press1 && !isLessThanPoint75(total) -> [total <- total - 0.75];

  // When "2" is pressed and the total is >= 1, decrement total by 1
  press2 && !isLessThanOne(total) -> [total <- total - 1];

  // When "3" is pressed and the total is >= 1.25, decrement total by 1.25
  press3 && !isLessThanOnePoint25(total) -> [total <- total - 1.25];

  // When "r" is pressed, set total to 0
  pressR -> [total <- 0];
}
