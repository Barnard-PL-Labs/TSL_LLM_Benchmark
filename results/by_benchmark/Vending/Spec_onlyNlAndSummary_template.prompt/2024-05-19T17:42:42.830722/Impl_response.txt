To implement the described predicates in JavaScript, we will define functions that verify the conditions based on the values of `total` and `e`. Here's how you can write these predicates:

```javascript
// Predicate to check if the 'total' is less than 0.75
function isLessThanPoint75(total) {
    return total < 0.75;
}

// Predicate to check if the 'total' is less than 1
function isLessThanOne(total) {
    return total < 1;
}

// Predicate to check if the 'total' is less than 1.25
function isLessThanOnePoint25(total) {
    return total < 1.25;
}

// Predicate to check if the 'd' key was pressed
function pressD(e) {
    return e.key === 'd';
}

// Predicate to check if the 'q' key was pressed
function pressQ(e) {
    return e.key === 'q';
}

// Predicate to check if the 'o' key was pressed
function pressO(e) {
    return e.key === 'o';
}

// Predicate to check if the '1' key was pressed
function press1(e) {
    return e.key === '1';
}

// Predicate to check if the '2' key was pressed
function press2(e) {
    return e.key === '2';
}

// Predicate to check if the '3' key was pressed
function press3(e) {
    return e.key === '3';
}

// Predicate to check if the 'r' key was pressed
function pressR(e) {
    return e.key === 'r';
}
```

### Explanation:
1. **Total Amount Checks**: `isLessThanPoint75`, `isLessThanOne`, and `isLessThanOnePoint25` functions take a numeric argument `total` and return `true` if the total value is less than the specified amount, otherwise `false`.

2. **Key Press Checks**: For checking which key has been pressed (`pressD`, `pressQ`, `pressO`, `press1`, `press2`, `press3`, `pressR`), each function accepts an event object `e` and returns `true` if the specified key (`d`, `q`, `o`, `1`, `2`, `3`, `r` respectively) is the one pressed.

These predicates can be utilized in any JavaScript code that deals with key events or numerical conditions to guide the behavior of a vending machine or any similar system as specified. Make sure that these function are properly integrated into your event listeners or other parts of your application that handle the key events and the value of `total`.
