always assume {
  // Ensure that no two buttons are pressed at the same time
  !(pressD && pressQ) &&
  !(pressD && pressO) &&
  !(pressD && press1) &&
  !(pressD && press2) &&
  !(pressD && press3) &&
  !(pressD && pressR) &&
  !(pressQ && pressO) &&
  !(pressQ && press1) &&
  !(pressQ && press2) &&
  !(pressQ && press3) &&
  !(pressQ && pressR) &&
  !(pressO && press1) &&
  !(pressO && press2) &&
  !(pressO && press3) &&
  !(pressO && pressR) &&
  !(press1 && press2) &&
  !(press1 && press3) &&
  !(press1 && pressR) &&
  !(press2 && press3) &&
  !(press2 && pressR) &&
  !(press3 && pressR);
}

always guarantee {
  // Increment total by 0.1 when the D button is pressed
  pressD -> [total <- total + 0.1];

  // Increment total by 0.25 when the Q button is pressed
  pressQ -> [total <- total + 0.25];

  // Increment total by 1 when the O button is pressed
  pressO -> [total <- total + 1];

  // Decrement total by 0.75 when the 1 button is pressed, if total is 0.75 or more
  (press1 && total >= 0.75) -> [total <- total - 0.75];

  // Decrement total by 1 when the 2 button is pressed, if total is 1 or more
  (press2 && total >= 1) -> [total <- total - 1];

  // Decrement total by 1.25 when the 3 button is pressed, if total is 1.25 or more
  (press3 && total >= 1.25) -> [total <- total - 1.25];

  // Reset total to 0 when the R button is pressed
  pressR -> [total <- 0];
}
