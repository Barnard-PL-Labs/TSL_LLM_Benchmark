In the scenario described, you seek to implement predicates to evaluate conditions based on the state of system variables `total` and `e` for a vending machine system. These predicates would typically be used to guide the logic of the system in a real-time or event-driven application, such as handling inputs or managing states in a vending machine.

Below are the JavaScript implementations of the predicates as described:

```javascript
// Predicate to check if the total is less than 0.75
function isLessThanPoint75(total) {
    return total < 0.75;
}

// Predicate to check if the total is less than 1
function isLessThanOne(total) {
    return total < 1;
}

// Predicate to check if the total is less than 1.25
function isLessThanOnePoint25(total) {
    return total < 1.25;
}

// Predicate to check if the 'd' key was pressed
function pressD(e) {
    return e.key === 'd';
}

// Predicate to check if the 'q' key was pressed
function pressQ(e) {
    return e.key === 'q';
}

// Predicate to check if the 'o' key was pressed
function pressO(e) {
    return e.key === 'o';
}

// Predicate to check if the '1' key was pressed
function press1(e) {
    return e.key === '1';
}

// Predicate to check if the '2' key was pressed
function press2(e) {
    return e.key === '2';
}

// Predicate to check if the '3' key was pressed
function press3(e) {
    return e.key === '3';
}

// Predicate to check if the 'r' key was pressed
function pressR(e) {
    return e.key === 'r';
}
```

### Explanation:
1. **isLessThanPoint75, isLessThanOne, isLessThanOnePoint25**: These functions check if the `total` variable is below specified thresholds (0.75, 1, 1.25 respectively), which can be useful to determine if sufficient funds have been inserted into the vending machine for various operations or purchases.

2. **pressD, pressQ, pressO, press1, press2, press3, pressR**: These functions check the event object `e` to see if a specific key was pressed ('d', 'q', 'o', '1', '2', '3', 'r'). These inputs can be linked to specific choices or functions of the vending machine, such as selecting items, opening a service menu, or adding funds.

These predicates serve as fundamental building blocks for implementing the logic that controls the vending machine's interaction based on user inputs and system states. They would be used in the context of event handlers or similar mechanisms that react to changes in the system or user inputs.