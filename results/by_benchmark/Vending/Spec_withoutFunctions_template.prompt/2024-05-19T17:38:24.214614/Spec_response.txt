Here is the TSL specification based on the provided description:

```tsl
always assume {
  // Mutual exclusion for all button presses
  !(pressD(e) && pressQ(e)) && !(pressD(e) && pressO(e)) && !(pressD(e) && press1(e)) &&
  !(pressD(e) && press2(e)) && !(pressD(e) && press3(e)) && !(pressD(e) && pressR(e)) &&
  !(pressQ(e) && pressO(e)) && !(pressQ(e) && press1(e)) && !(pressQ(e) && press2(e)) &&
  !(pressQ(e) && press3(e)) && !(pressQ(e) && pressR(e)) &&
  !(pressO(e) && press1(e)) && !(pressO(e) && press2(e)) && !(pressO(e) && press3(e)) &&
  !(pressO(e) && pressR(e)) &&
  !(press1(e) && press2(e)) && !(press1(e) && press3(e)) && !(press1(e) && pressR(e)) &&
  !(press2(e) && press3(e)) && !(press2(e) && pressR(e)) &&
  !(press3(e) && pressR(e));
}

always guarantee {
  // Incrementing total value by 0.1 when D is pressed
  pressD(e) -> [total <- total + 0.1];

  // Incrementing total value by 0.25 when Q is pressed
  pressQ(e) -> [total <- total + 0.25];

  // Incrementing total value by 1 when O is pressed
  pressO(e) -> [total <- total + 1];

  // Decrementing total value by 0.75 when 1 is pressed, if total >= 0.75
  (press1(e) && !isLessThanPoint75(total)) -> [total <- total - 0.75];

  // Decrementing total value by 1 when 2 is pressed, if total >= 1
  (press2(e) && !isLessThanOne(total)) -> [total <- total - 1];

  // Decrementing total value by 1.25 when 3 is pressed, if total >= 1.25
  (press3(e) && !isLessThanOnePoint25(total)) -> [total <- total - 1.25];

  // Setting total value to 0 when R is pressed
  pressR(e) -> [total <- 0];
}
```

This TSL specification accurately represents the system according to the requirements specified in the natural language description. It ensures that the vending machine's operations via button presses are mutually exclusive, and handles the vending machine's total value based on the buttons pressed, adhering to the conditions stated.