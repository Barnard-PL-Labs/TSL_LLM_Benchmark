Below is the TSL specification based on the provided natural language description and requirements for operating a vending machine with button interactions:

```tsl
always assume {
    !(pressD(e) && pressQ(e));
    !(pressD(e) && pressO(e));
    !(pressD(e) && press1(e));
    !(pressD(e) && press2(e));
    !(pressD(e) && press3(e));
    !(pressD(e) && pressR(e));
    !(pressQ(e) && pressO(e));
    !(pressQ(e) && press1(e));
    !(pressQ(e) && press2(e));
    !(pressQ(e) && press3(e));
    !(pressQ(e) && pressR(e));
    !(pressO(e) && press1(e));
    !(pressO(e) && press2(e));
    !(pressO(e) && press3(e));
    !(pressO(e) && pressR(e));
    !(press1(e) && press2(e));
    !(press1(e) && press3(e));
    !(press1(e) && pressR(e));
    !(press2(e) && press3(e));
    !(press2(e) && pressR(e));
    !(press3(e) && pressR(e));
}

always guarantee {
    pressD(e) -> [total <- total + 0.1];
    pressQ(e) -> [total <- total + 0.25];
    pressO(e) -> [total <- total + 1];
    (press1(e) && isLessThanPoint75(total)) -> [total <- total - 0.75];
    (press2(e) && isLessThanOne(total)) -> [total <- total - 1];
    (press3(e) && isLessThanOnePoint25(total)) -> [total <- total - 1.25];
    pressR(e) -> [total <- 0];
}
```

### Explanation:
1. **Assumptions**: These ensure that no two operations (button presses) occur at the same time, maintaining mutual exclusion which is a necessary condition for the correct functioning of the vending machine as described.

2. **Guarantees**:
   - For operations that add value (`pressD`, `pressQ`, `pressO`), the respective amount is added to the `total` whenever a button is pressed.
   - For operations that deduct value (`press1`, `press2`, `press3`), the respective amount is subtracted from the `total` only if the current total meets the required minimum amount. This is controlled using the predicates `isLessThanPoint75`, `isLessThanOne`, and `isLessThanOnePoint25`.
   - The operation `pressR` resets the `total` to zero.

This TSL code effectively models the vending machine's behavior as per the given scenario, ensuring that the operations occur under the right conditions and that button presses do not conflict with each other.