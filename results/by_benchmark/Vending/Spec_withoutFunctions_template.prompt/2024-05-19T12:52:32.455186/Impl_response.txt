For the required predicates based on the given system environment and the criteria mentioned, the JavaScript implementations would look like the following:

```javascript
function isLessThanPoint75(total) {
    return total < 0.75;
}

function isLessThanOne(total) {
    return total < 1;
}

function isLessThanOnePoint25(total) {
    return total < 1.25;
}

function pressD(e) {
    return e.key === 'd';
}

function pressQ(e) {
    return e.key === 'q';
}

function pressO(e) {
    return e.key === 'o';
}

function press1(e) {
    return e.key === '1';
}

function press2(e) {
    return e.key === '2';
}

function press3(e) {
    return e.key === '3';
}

function pressR(e) {
    return e.key === 'r';
}
```

### Usage Example:

You would typically use these functions in an event handler or a place where the value of `total` or the event `e` representing a keypress is available. Here's an example of how you might use the `pressD` function, assuming you have an event listener set up for keypress events:

```javascript
document.addEventListener('keypress', function(e) {
    if (pressD(e)) {
        console.log("D key was pressed.");
    }
});
```

Similarly, for testing if the total is less than a certain amount, you might use it like this:

```javascript
var currentTotal = 0.50;  // Assume some value is already there
if (isLessThanPoint75(currentTotal)) {
    console.log("Total is less than 0.75.");
}
```

These predicates can be used in different scenarios depending on the application's requirements, such as controlling a vending machine's operations based on key inputs and total amount inserted.