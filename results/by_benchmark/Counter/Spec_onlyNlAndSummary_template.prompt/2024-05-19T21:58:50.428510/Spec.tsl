always assume {
  // Mutual exclusion for button presses
  !(pressA && pressB);
  !(pressA && pressC);
  !(pressB && pressC);
}

always guarantee {
  // When pressA is pushed, increment the counter by 'stepsize'
  pressA -> ([count <- count + stepsize]);

  // When pressB is pushed, increment the counter by 2
  pressB -> ([count <- count + 2]);

  // When pressC is pushed, increment the counter by 3
  pressC -> ([count <- count + 3]);

  // Monitoring triple consecutive pressA to adjust stepsize
  pressA -> X (pressA -> X (pressA -> X (pressA -> ([stepsize <- multiplyByThree(stepsize)]))));

  // Reset stepsize to 1 when either pressB or pressC is pressed
  (pressB || pressC) -> ([stepsize <- 1]);

}
