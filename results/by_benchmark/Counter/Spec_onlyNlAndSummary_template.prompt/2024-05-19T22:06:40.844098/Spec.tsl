always assume {
  !(pressA && pressB) && !(pressA && pressC) && !(pressB && pressC); // No two button operations can be performed at the same time
}

always guarantee {
  pressA -> [count <- count + stepsize]; // Increment the counter by stepsize when A is pressed
  pressB -> [count <- count + 2]; // Increment the counter by 2 when B is pressed
  pressC -> [count <- count + 3]; // Increment the counter by 3 when C is pressed

  // If A is pressed three times in a row, increase stepsize by multiplying it by three
  (pressA && X(pressA) && X(X(pressA)) && X(X(X(pressA)))) -> [stepsize <- multiplyByThree(stepsize)];

  // If B or C is pressed, reset stepsize to 1
  (pressB || pressC) -> [stepsize <- 1];
}
