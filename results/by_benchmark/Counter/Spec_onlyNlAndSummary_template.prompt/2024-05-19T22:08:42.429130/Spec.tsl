always assume {
  // Mutual exclusion between button presses
  !(pressA && pressB);
  !(pressA && pressC);
  !(pressB && pressC);
}

always guarantee {
  // Increment count by stepsize when pressA is clicked
  pressA -> [count <- count + stepsize];

  // Increment count by 2 when pressB is clicked
  pressB -> [count <- count + 2];

  // Increment count by 3 when pressC is clicked
  pressC -> [count <- count + 3];

  // Increase stepsize by 3 times if pressA is clicked three times in a row
  (pressA && X (pressA && X (pressA))) -> [stepsize <- multiplyByThree(stepsize)];

  // Reset stepsize to 1 if pressB or pressC is pressed
  (pressB || pressC) -> [stepsize <- 1];
}
