Here's a JavaScript implementation for the functions and predicates based on your requirements:

### Functions Implementation:

The function `multiplyByThree` takes a value and returns that value multiplied by three:

```javascript
function multiplyByThree(stepsize) {
    return stepsize * 3;
}
```

### Predicates Implementation:

For implementing the predicates to determine if specific keys ('a', 'b', 'c') are pressed, assuming `e` is an event object typically passed to event handlers in JavaScript:

```javascript
function pressA(e) {
    return e.key === 'a';
}

function pressB(e) {
    return e.key === 'b';
}

function pressC(e) {
    return e.key === 'c';
}
```

### Usage Example:

To use these functions, especially the predicates, within an event listener context in a web environment, you can set up event listeners like this:

```javascript
document.addEventListener('keydown', function(e) {
    if (pressA(e)) {
        console.log('A key was pressed');
        // Increase counter by stepsize
        // counter += stepsize; (Assuming 'counter' and 'stepsize' are defined elsewhere)
    }

    if (pressB(e)) {
        console.log('B key was pressed');
        // Perform action for B key
    }

    if (pressC(e)) {
        console.log('C key was pressed');
        // Perform action for C key
    }
});
```

This setup allows the functions and predicates to interact with an actual environment where key presses can occur, such as in a web page. Adjustments might be necessary depending on the specific details of the system API and environment where these implementations will be integrated.