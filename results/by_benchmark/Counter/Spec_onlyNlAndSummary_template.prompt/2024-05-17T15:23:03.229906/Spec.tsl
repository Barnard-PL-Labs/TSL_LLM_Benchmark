always assume {
    // Mutual exclusion for button presses
    !(pressA && pressB);
    !(pressA && pressC);
    !(pressB && pressC);
}

always guarantee {
    // When pressA is pushed, increment the counter by 1
    pressA -> [count <- count + 1];

    // When pressB is pushed, increment the counter by 2
    pressB -> [count <- count + 2];

    // When pressC is pushed, increment the counter by 3
    pressC -> [count <- count + 3];

    // When pressA is pushed three times in a row and then pressed a fourth time, multiply the stepsize by 3
    pressA && X(pressA && X(pressA && X(pressA))) -> [stepsize <- multiplyByThree(stepsize)];

    // When pressB or pressC is pushed after any number of consecutive pressA, reset the stepsize to 1
    (pressB || pressC) -> [stepsize <- 1];
}
