always assume {
  // Ensure mutual exclusion of pressing buttons A, B, and C
  !(pressA && pressB);
  !(pressA && pressC);
  !(pressB && pressC);
}

always guarantee {
  // Incrementing the counter by the step size when A is pressed
  pressA -> [count <- count + stepsize];

  // Incrementing the counter by 2 when B is pressed
  pressB -> [count <- count + 2];

  // Incrementing the counter by 3 when C is pressed
  pressC -> [count <- count + 3];

  // If A is pressed three consecutive times, multiply stepsize by 3
  (pressA && X(pressA && X(pressA))) -> X(X(X([stepsize <- multiplyByThree(stepsize)])));

  // If B or C is pressed, reset stepsize to 1
  (pressB || pressC) -> [stepsize <- 1];

  // Initialize stepsize to 1 when the system starts
  [stepsize <- 1];
}
