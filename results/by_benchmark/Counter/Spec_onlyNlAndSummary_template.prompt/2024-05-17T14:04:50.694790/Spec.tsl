always assume {
  // Ensure that no two buttons are pressed simultaneously
  !(pressA && pressB) && !(pressA && pressC) && !(pressB && pressC);
}

always guarantee {
  // Increment counter by 1 when A is pressed
  pressA -> [count <- count + 1];
  
  // Increment counter by 2 when B is pressed
  pressB -> [count <- count + 2];
  
  // Increment counter by 3 when C is pressed
  pressC -> [count <- count + 3];
  
  // If A is pressed three times in a row, increase stepsize by multiplying by three
  (X (pressA && X (pressA && X pressA))) -> X [stepsize <- multiplyByThree(stepsize)] W (!pressA || pressB || pressC);
  
  // Reset stepsize to 1 when B or C is pressed
  (pressB || pressC) -> [stepsize <- 1];
}
