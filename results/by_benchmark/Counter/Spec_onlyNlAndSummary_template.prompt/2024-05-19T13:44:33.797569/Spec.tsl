always assume {
  // Ensure mutual exclusivity between button presses
  !(pressA && pressB);
  !(pressA && pressC);
  !(pressB && pressC);
}

always guarantee {
  // Increment counters based on button presses
  pressA -> [count <- count + stepsize];
  pressB -> [count <- count + 2];
  pressC -> [count <- count + 3];

  // Manage stepsize for pressA based on consecutive presses
  (pressA && X(pressA) && X(X(pressA)) && X(X(X(pressA)))) -> [stepsize <- multiplyByThree(stepsize)];
  
  // Reset stepsize to 1 if either pressB or pressC is pressed
  (pressB || pressC) -> [stepsize <- 1];

  // Ensure the initial step size for pressA is 1
  [stepsize <- 1] W (pressB || pressC);
}
