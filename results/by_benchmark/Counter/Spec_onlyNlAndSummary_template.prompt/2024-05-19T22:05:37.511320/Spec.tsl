always assume {
  // mutual exclusivity for button presses
  !(pressA && pressB);
  !(pressA && pressC);
  !(pressB && pressC);
}

always guarantee {
  // Increment counter by stepsize when A is pressed
  pressA -> [count <- count + stepsize];

  // Increment counter by 2 when B is pressed
  pressB -> [count <- count + 2];

  // Increment counter by 3 when C is pressed
  pressC -> [count <- count + 3];

  // After pressing A three times consecutively, multiply stepsize by 3
  (X (pressA && X (pressA && X pressA))) -> [stepsize <- stepsize * 3];

  // Reset stepsize to 1 on pressing B or C
  (pressB || pressC) -> [stepsize <- 1];
}
