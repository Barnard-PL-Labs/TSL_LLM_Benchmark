always assume {
  // Ensure that no two button presses can happen at the same time
  !(pressA(e) && pressB(e));
  !(pressA(e) && pressC(e));
  !(pressB(e) && pressC(e));
}

always guarantee {
  // Increment the counter by 1, 2, or 3 depending on the button press
  pressA(e) -> [count <- count + stepsize];
  pressB(e) -> [count <- count + 2];
  pressC(e) -> [count <- count + 3];

  // Set the step size back to 1 if B or C is pressed
  (pressB(e) || pressC(e)) -> [stepsize <- 1];

  // If A is pressed three times in a row, multiply stepsize by 3 on the fourth press
  G((F(pressA(e) && X(pressA(e) && X(pressA(e) && X(pressA(e))))))) -> [stepsize <- multiplyByThree(stepsize)];
}
