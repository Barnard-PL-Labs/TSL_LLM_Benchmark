always assume {
  // Ensure that no two buttons are pressed at the same time.
  !(pressA(e) && pressB(e));
  !(pressA(e) && pressC(e));
  !(pressB(e) && pressC(e));
}

always guarantee {
  // When A is pressed three times consecutively, stepsize is multiplied by three
  // unless B or C is pressed, which resets the stepsize to 1.
  pressA(e) -> (
    X pressA(e) -> (
      X pressA(e) -> [stepsize <- multiplyByThree(stepsize)] W (pressB(e) || pressC(e))
    )
  );
  
  // When B or C is pressed, reset the stepsize to 1.
  (pressB(e) || pressC(e)) -> [stepsize <- 1];
}
