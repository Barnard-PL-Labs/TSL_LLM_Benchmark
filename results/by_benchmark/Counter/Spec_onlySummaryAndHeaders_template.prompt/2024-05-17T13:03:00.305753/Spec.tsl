always assume {
  // Ensure that no two button presses can happen simultaneously
  !(pressA(e) && pressB(e));
  !(pressA(e) && pressC(e));
  !(pressB(e) && pressC(e));
}

always guarantee {
  // Pressing A three times in a row multiplies the stepsize by 3, unless B or C is pressed, which resets it to 1
  ((pressA(e) && X(pressA(e)) && XX(pressA(e))) && !(X(pressB(e)) || X(pressC(e)) || XX(pressB(e)) || XX(pressC(e))))
    -> [stepsize <- multiplyByThree(stepsize)];
  
  // Reset stepsize to 1 if B or C is pressed
  (pressB(e) || pressC(e))
    -> [stepsize <- 1];
}
