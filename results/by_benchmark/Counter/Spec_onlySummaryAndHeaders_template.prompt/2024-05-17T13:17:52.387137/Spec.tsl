always assume {
  // Ensure that no two button operations are performed simultaneously
  !(pressA(e) && pressB(e));
  !(pressA(e) && pressC(e));
  !(pressB(e) && pressC(e));
}

always guarantee {
  // When A is pressed three times consecutively, multiply stepsize by 3 if neither B nor C is pressed in between
  G (pressA(e) -> X (pressA(e) -> X (pressA(e) -> ([stepsize <- multiplyByThree(stepsize)] W (pressB(e) || pressC(e)))));

  // Reset stepsize to 1 if B or C is pressed
  (pressB(e) || pressC(e)) -> [stepsize <- 1];
}
