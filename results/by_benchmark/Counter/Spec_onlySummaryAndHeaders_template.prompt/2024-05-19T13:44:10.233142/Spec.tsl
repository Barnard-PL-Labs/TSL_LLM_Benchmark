always assume {
  // Ensure that no two button presses can occur simultaneously
  !(pressA(e) && pressB(e));
  !(pressA(e) && pressC(e));
  !(pressB(e) && pressC(e));
}

always guarantee {
  // When A is pressed three times consecutively, multiply stepsize by 3, provided B or C are not pressed in between
  pressA(e) && X(pressA(e)) && X(X(pressA(e))) && !(X(pressB(e) || pressC(e))) && !(X(X(pressB(e) || pressC(e)))) -> [stepsize <- multiplyByThree(stepsize)];

  // If B or C is pressed, reset the stepsize to 1
  (pressB(e) || pressC(e)) -> [stepsize <- 1];
}
