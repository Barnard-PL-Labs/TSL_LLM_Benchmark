always assume {
  // Ensure that no two button presses can occur simultaneously
  !(pressA(e) && pressB(e));
  !(pressA(e) && pressC(e));
  !(pressB(e) && pressC(e));
}

always guarantee {
  // If the A key is pressed three times consecutively without B or C being pressed, multiply stepsize by 3
  pressA(e) -> X(pressA(e) -> X(pressA(e) -> [stepsize <- multiplyByThree(stepsize)] W (pressB(e) || pressC(e))));

  // If B or C key is pressed, reset the stepsize to 1
  (pressB(e) || pressC(e)) -> [stepsize <- 1];

  // If no button press modifies the stepsize, it should remain the same
  !(pressA(e) || pressB(e) || pressC(e)) -> [stepsize <- stepsize];
}
