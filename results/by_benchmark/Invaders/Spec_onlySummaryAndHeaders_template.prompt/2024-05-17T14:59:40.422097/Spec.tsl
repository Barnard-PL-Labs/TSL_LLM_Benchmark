always assume {
  // Ensure mutual exclusion for ship's position predicates
  !(leftmost(ship) && rightmost(ship));
  // Ensure mutual exclusion for simultaneously moving left and right
  !([ship <- moveLeft(ship)] && [ship <- moveRight(ship)]);
  // Define the logic when the ship is hit
  hit(ship) -> [ship <- die(ship)];
}

always guarantee {
  // Define left movement, ensuring the ship does not move further left if it's already at the leftmost position
  !leftmost(ship) -> [ship <- moveLeft(ship)];
  
  // Define right movement, ensuring the ship does not move further right if it's already at the rightmost position
  !rightmost(ship) -> [ship <- moveRight(ship)];

  // Action to shoot
  [ship <- shoot(ship)];
}
