always assume {
  // Mutual exclusions for key inputs to ensure no conflicting movements
  !(pressL(e) && pressR(e));
  !(pressL(e) && pressUp(e));
  !(pressL(e) && pressDown(e));
  !(pressR(e) && pressUp(e));
  !(pressR(e) && pressDown(e));
  !(pressUp(e) && pressDown(e));
}

always guarantee {
  // Ship movements and interactions
  // If the ship is hit by an enemy, end game or lose a life
  hit(ship) -> [die(ship)];

  // Left movement: if left key is pressed and ship is not at leftmost position
  pressL(e) && !leftmost(ship) -> [ship <- moveLeft(ship)];

  // Right movement: if right key is pressed and ship is not at rightmost position
  pressR(e) && !rightmost(ship) -> [ship <- moveRight(ship)];

  // Shooting action: if shoot key is pressed, trigger shooting
  pressShoot(e) -> [shoot(ship)];
}
