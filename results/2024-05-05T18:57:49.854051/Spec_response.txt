```
always assume {
  // Three buttons can be independently pushed by the user
  (button1 || button2 || button3);
}

always guarantee {
  // When button1 is pushed, E4 must be played next on noteToPlay
  button1 -> X ([noteToPlay <- "E4"]);

  // When button2 is pushed, G4 must be played next on noteToPlay
  button2 -> X ([noteToPlay <- "G4"]);

  // When button3 is pushed, A4 must be played next on noteToPlay2
  button3 -> X ([noteToPlay2 <- "A4"]);

  // Ensure A4 on noteToPlay2 does not occur simultaneously with E4 on noteToPlay
  ([noteToPlay2 <- "A4"]) -> !(noteToPlay = "E4");

  // Ensure A4 cannot be played on noteToPlay2 until E4 has stopped being played on noteToPlay
  ([noteToPlay2 <- "A4"]) -> G !(noteToPlay = "E4");

  // If E4 is played on noteToPlay, then A4 must eventually be played on noteToPlay2 and G4 on noteToPlay
  ([noteToPlay <- "E4"])
    -> (F ([noteToPlay <- "G4"]) && F ([noteToPlay2 <- "A4"]));
}
```

This TSL specification reflects all the given conditions about handling musical notes based on button inputs and ensures that certain sequences or chords are possible or prevented according to the rules in the natural language description.