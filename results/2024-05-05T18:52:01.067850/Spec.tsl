always assume {
  (moveLeft -> X ![position == 10]); // If moved left, next position isn't 10
  (moveRight -> X ![position == 0]); // If moved right, next position isn't 0
  ![position == 0 && position == 10]; // Can't be at both walls simultaneously
}

always guarantee {
  (position == 10) -> F moveLeft; // Eventually moves left if at rightmost wall
  (position == 0) -> F moveRight; // Eventually moves right if at leftmost wall
  !((position == 0) || (position == 10)) -> F (moveLeft || moveRight); // Eventually moves in one direction if not at the walls

  // If at the leftmost wall and moving, must keep moving right until rightmost wall is reached
  (position == 0 && X (position != 0)) -> (moveRight W (position == 10));

  // If at the rightmost wall and moving, must keep moving left until leftmost wall is reached
  (position == 10 && X (position != 10)) -> (moveLeft W (position == 0));
}
