always assume {
  // Mutual exclusion for key inputs to avoid conflicting movements
  !(pressL && pressR);
  !(pressL && pressUp);
  !(pressL && pressDown);
  !(pressR && pressUp);
  !(pressR && pressDown);
  !(pressUp && pressDown);
}

always guarantee {
  // Handling ship movement to the left
  pressL && !leftmost(ship) -> [ship <- moveLeft(ship)];
  // Handling ship movement to the right
  pressR && !rightmost(ship) -> [ship <- moveRight(ship)];
  // Handling shooting action
  pressShoot -> [ship <- shoot(ship)];
  // Handling the ship being hit
  hit(ship) -> [ship <- die(ship)];
  // Preventing movement when ship is at the boundaries or when hit
  (leftmost(ship) && pressL) -> [ship <- ship];
  (rightmost(ship) && pressR) -> [ship <- ship];
  // Ensuring no action is taken when no key is pressed or in dead state
  !(pressL || pressR || pressShoot || hit(ship)) -> [ship <- ship];
}
