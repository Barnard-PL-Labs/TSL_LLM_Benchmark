Here is the TSL (Temporal Stream-based Logic) specification based on the provided natural language description and necessary functions for a control system for a cube's rotation controlled by left and right buttons:

```tsl
always assume {
  // Assume the left and right buttons are never pressed at the same time
  !(pressL(e) && pressR(e));
}

always guarantee {
  // If the left button is pressed, the cube should begin rotating to the left
  // This rotation should continue until the right button is pressed
  pressL(e) -> ([cube <- rotateLeft(cube)] W pressR(e));
  
  // Similarly, if the right button is pressed, the cube should rotate to the right
  // This rotation should continue until the left button is pressed
  pressR(e) -> ([cube <- rotateRight(cube)] W pressL(e));
}
```

This TSL specification defines the following:
1. The **assumption** section ensures mutual exclusion between the pressing of the left and right buttons.
2. The **guarantee** section controls the cube's rotation actions. When the left button (`pressL(e)`) is pressed, `rotateLeft(cube)` function is continually activated until the right button (`pressR(e)`) is pressed. Conversely, when the right button is pressed, `rotateRight(cube)` function is continually executed until the left button is pressed again. This setup allows continuous and exclusive rotation control based on the button press events, ensuring that rotation direction changes are smooth and conflict-free.